Lecture 1. Blockchains, entrance. - YouTube
https://www.youtube.com/watch?v=8A4Mzv1UZKA

Transcript:
(00:02) все значит Всем привет начинаем лекцию Сегодня можно нашу самую первую лекцию значит немножко как бы Почему эта лекция такая в общем-то это было обсуждение со студентами то есть прошлый раз мы проходили по программе проходили Там сначала криптографию пилинговые сети там не знаю консенсус и так далее и так далее и только потом соответственно уже на все на всей этой базе как бы врывались там смарт-контракты вот ну и оказалось так что в конце семестра Ну то есть самый такой важный код как бы студенты щупали в конце семестр только уже когда уже там
(00:44) сессия на носу Вот и поэтому было решено Сначала сделать пару лекций такие выходные мы прям верхний уровень пробежимся что это такое уже посмотрим на код Smart контрактов как бы научимся их там запускать а потом уже в течение всего курса будем все глубже и глубже погружаться Вот то есть там не знаю там верхний уровень обсудим верхнем обсудим там например там не знаю фотографию потом на лекции более глубоко рассмотрим вот ну и то же самое касается там не знаю консенсусов различных Ну что всего поехали что это за Я
(01:30) немножко рассказал на входной лекции Как выглядит разработка здесь а теперь собственно Что собой представляет именно публичные блокчейна вот на каких собственно основных примитивах они строятся значит такой самый простой объяснение это такое Если вы хотите как бы человеку какому-то объяснить как бы он может сказать Типа ты торрентными пользуешься вот если человек пользуется торрентом примерно может как бы там понимать как выглядит блокчейн у нас есть какой-то там пользователь который отправляет транзакцию куда-то в
(02:06) неизвестно Кому как бы то есть отправляет первым попавшимся компьютеру который следует протоколу блокчейна который будет делать когда то что и этот компьютер рассказывает остальным компьютером про транзакцию пользователя там не знаю деньги в этой транзакции лежат может быть и нет Вот И вдобавок еще получает информацию о соседях других компьютеров то есть они меняются постоянно информация конфигурации сети кто-то включается кто-то выключается часть этой возможно она отрубить но она продолжит все равно распространять
(02:43) информацию Потому что по дефолту То есть все вот эти вот как бы мы будем называть блокчейн ноды они по дефолту обмениваются друг с другом всей информацией которая соответствует формату то есть пришла как бы не знаю там транзакция она это распространяет Здесь ничего сложного особо нет здесь обычный Джейсон rpc если кто как бы занимался программированием интерфейс просто Соня там делает там методом отправляются какие-то бантики и дальше надо начинать транзакцию рассказывать всем остальным и получается сети блоки
(03:22) вот значит В чем фишка вот эту Ну вот всех вот этих вот блокчейн технологий от существующих решений то есть здесь никакого лучше встать здесь нету это блокчейн просто по сути как бы такой отдельный вид софта немножко как бы который обладает одним очень важным свойством смотрите если у нас есть там банковское приложение проще всего вообще показывать на финансах это кстати один из примеров Почему как бы Крипто это именно типа крипта именно деньги Да просто потому что как бы деньги это всего лишь на всю информацию вот вам
(04:09) я не транслирую экран все понял Надо было меня тянуть Так давайте Вот так вот все вот теперь атмосферу экран тогда я собственно рисую здесь такую штуку нас Вася Да отправляет транзакцию какую-то сети вот здесь вот как бы ноги меняется друг другу информации если мы работаем банк клиентов со сбером как бы тиньковым мы говорим там Отправь там 100 долларов кому-то кому-то как бы и в банке есть табличка написано что Вася было там 200 долларов как бы и стал у него как бы 100 долларов купить стало плюс 100 долларов на баланс то есть по
(04:55) сути финансовое предложение оперируют только информации поэтому они такие довольно простые с точки зрения надежности как бы там я и требования к ним вот и предположим этот банк расположен на нескольких континентах и как бы вот этого расстояния между между компьютерами между этими базами достаточно существенная А вам нужно поддерживать консистентную базу здесь у вас и должно стать 100 долларов эти как бы там соответственно баланс Здесь вам надо как-то распространить эту информацию здесь достаточно целостно и здесь есть прям
(05:35) Ключевая проблема безопасности она блокчейнах называется doubles pant двойная трата но относится она конечно же не только блокчейна вообще к распределенным системам если Вася вот здесь как бы потратить свои 100 долларов и одновременно вот здесь потратить свои 100 долларов а у него на балансе всего как бы 100 долларов То соответственно возникли конфликт надо будет что-то делать соответственно надо будет выяснить какая ВКонтакте была первая здесь они могли как бы пока они там встретиться эти два сервера Может там не знаю интернет пропал в этот
(06:10) момент то есть проблем довольно много как бы существует и для этого в базах данных существует механизмы которые называются репликация то есть реплики А вот эти вот как бы компьютеры которые принимают транзакции от пользователя причем как бы именно пишущие транзакции пишите базы данных наверное как бы многих добыли как бы там более-менее как бы может быть там знаете все все транзакции которые записывают информацию базу данных пишущие ставка апдейты удаления информации базе данных они попадаются так называемый мастер реплики мастер
(06:57) пишет базу данных потому что у сервис Может быть там не знаю слейв реплик то есть который только отдают информацию только на чтение то есть они не записывают и вот эти вот алгоритмы называется алгоритмы репликации и в распределенных базах данных таких больших там соответственно они есть если вам интересно пройти алгоритм почитать это алгоритм известный рафт и второй как бы паксов говорит о том что там много там Пошла сюда предложила там закомить такой блок транзакции это говорит Да я согласна Значит все там за это голосуют
(07:35) собираются там голоса других как бы реплик и там есть какой-то порог перевален то соответственно транзакция считается Конечно есть там формальные доказательства что как бы это надежно Вот Но у всех у этих алгоритмов которые используются в банках они устойчивые только к падениям вот этих вот Нот то есть потому что там где-то вырубится интернет или какой-то мусор будет отдан данный случай они Не защищены так называемого византийского поведения византин пол то есть устойчивость к византийскому поведению у них это парадигма называется
(08:19) Crush Fold tolerance если что-то упадет и сломается как бы то как бы система сдюжит Да там Если осталось достаточное количество серверов то потом включит новую реплику и она автоматически других догонится как бы и заполнится валидными данными Но если в этой сети появляется византийские части а византийские имеется ввиду такой как бы предатель то есть который намеренно действует зло То есть он не просто как бы выключает компьютер Хотя может конечно просто выключить А он начинает дезинформировать другие ноды То есть он
(08:55) у него захвачен этот компьютер как бы и он говорит там Вася потратил здесь 30 долларов этому потратил 50 долларов То есть он вносит как бы хаос работу и система перестает работать вот этот консистентность вот этих баз данных как бы она нарушается то есть они могут прийти состояние там разных репликах разные данные это можно использовать Вот блокчейны они являются Ну то есть как бы истины там настоящие они являются бизантин пол толеранс то есть они устойчивы к тому что у них находятся прямо намеренно злые участники которые
(09:30) прям хотят как бы атаковать сеть которые хотят и у всех там завалить как бы не знаю там найти какой-то Баг и заставить все эти становиться вот поэтому как бы блокчейнах требованиях безопасности вот этих протоколов они сильно выше Ну и эту безопасность обеспечивают они за счет экономики там есть часть как бы именно которая по сути является экономической безопасности Вот то есть там будешь действовать как бы плохо будешь там что-то не то делать будешь либо терять ресурсы вычислительные как бы там нечестный майнер либо наказывать
(10:07) там деньгами и так далее обо всем этом очень подробно с вами поговорим то есть самое важное как бы свойства блокчейна bft То есть как бы византин полторенс устойчивость к византийскому поведению При этом надо не забывать что требования вот к этому византийскому поведению они у них есть специальные численные параметры то есть соглашение То есть например если взять современные алгоритмы консенсусы которые там типа не майнинг такие детерминированные то есть то там есть прям жесткое требование что больше двух 3 участников вот этих вот
(10:44) как бы нот которые протокол который производит блоки которые обрабатывают транзакции они являются честными то есть честными имеется ввиду просто следует протоколу то есть скачали код с гитхаба и как бы в ключевых местах ничего не меняли как бы запустили Но вот она работает в точности как бы так как предписано протоколом вот случае если вот это требование выполняется То есть если больше двух третей как бы является честными но то есть по сути это формальное доказательства того что сам блокчейн является Византийской устойчивой то есть
(11:20) вот этот оставшиеся меньше одной трети как бы участников они могут быть Сколь угодно как бы злыми там любые действия предпринимать как бы пытаться там не знаю там что угодно сети сделать как бы у них ничего не получится А вот если кто-то захватил больше двух 3 как бы тогда он там контролирует эту сеть вот если как бы злоумышленники захватили Одну треть прям ровно если у вас там 99 нот Как бы злоумышленников есть 33 то они в современных системах они могут остановить блокчейн они могут подсунуть там неверные данные не могут там
(11:55) изменить соответственно код но они могут по сути просто остановить процессинг Ну просто вырубив свою Одну треть как бы выключив её и сеть дальше не пойдет Вот в общем про все поговорим то есть нам сегодня с вами как бы не важно как они вот здесь вот договорились То есть у них есть вот эти протоколы консенсу мы будем рассматривать там пруфов стейк там майнинг так далее но нам для с вами как бы важнее гораздо сегодня как бы процесс распространения транзакции в блокчейне то есть И вообще для чего и как все внутри происходит
(12:34) Значит сами блокчейны их основная задача вот у нас есть там не знаю там куча компьютеров которые согласились следовать протоколу вы скачали с гитхаба там не знаю но до блокчейн запустили и вы типа согласились типа я буду в этой сети там себя там честно вести как бы там что-то делать соответственно ради чего они все это делают на самом деле во всех все биткоин эфир там не знаю там полька до а для нас с вами как пользователей Мы заходим с у вас не знаю там на сайт на какой-нибудь Крипто там спрашивать и там баланс и что такие там Не знаю процент
(13:17) Есть проекты регистрируем что-то в смарт-контрактов мы общаемся с какой-то из вот этих нот и откуда она берет информацию У нее есть на борту своя собственная база данных вот мы будем называть State databaseb как бы или даже просто там стоит как бы можно сказать состояние блокчейна и вот это вот база блокчейнах она ровно одна и та же с точностью до последнего бита то есть там нету ну если рассматривать как табличку там не знаю там у Васи там не знаю 100 долларов там купить там 200 долларов там понятно что куча храниться Ну вот эта
(14:00) база она одна и только одна на всех абсолютно компьютерах сети которые следуют протоколу вот которые как бы честные вот эти вот то есть если они все правильно сделали как бы самого начала до самого конца у них будет ровно одна и та же версия вот этой базы причем без лишних ключей то есть не часть базы будет верно там Не там не с точностью там до каких-то копеек А вот просто чисто прямо в бинарном виде то есть вот сама битвы как бы представление если взять там все ключи значения как бы разложить в один файл Там будет один и
(14:37) тот же Вот и все это вся вот эта вот база как бы она одна и та же при условии наличия на ноде вот на этой одного и того же набора блоков теперь уже переходим как бы к тому как бы что такое блоки значит пользователи отправляют свои транзакции сюда там не знаю какую-то ноду они там как-то там здесь распространяется по сети и транзакция Вася с адреса Васин адрес Пете как бы переводит 10 эфира подписывает все электроны подписи сейчас тоже поговорим и отправляет куда-то в сеть Что происходит в сети это транзакция распространяется по кучу
(15:28) других компьютеров пока не добирается до компьютера который будет производить следующий блок к этому моменту на всех этих машинах уже как бы какое-то количество блоков есть там есть все там до какого-то этапы дошли блоки точно также по вот этой пилингу сети распространяется То есть как только какая-то нода видит блок она его проверяет говорит что он болит но если он хороший как бы то она дает всем остальным я увидела как бы новый блок вот здесь вот по два там не знаю там 47 48 блок номера А вот у этой появился 49
(16:04) Она готова ребята У меня есть 49 как бы вот забирайте как бы он хороший я его проверил Вот соответственно если блок как бы корявый то ноды конечно его просто не пересылает как бы поэтому по сути как бы ну то есть если кто-то произвел какой-то там поддельный блок Ну такой или блок с ошибкой или блок который там не следует протокола короче в общем хотя бы там на шаг отступил как бы процедуру этой проверки блока то как бы его софт он даже передавать не будет дальше так и будет сидеть Ну он конечно может насильно его передать другим нодам
(16:42) но как бы он его запихал другую ноду она тоже проверила она честно говорит А я дальше не буду распространять Вот соответственно в блоках находится пачки транзакций от пользователей тоже это все прямо отдельная большая как бы песня как они процессится значит что там происходит и вот эти транзакции когда надо получает хороший валидный блок они накатываются на вот эту стоит Database последовательно Причем на каждой из вот этих вот машин то есть любой компьютер в сети как бы он скачал блок берет оттуда транзакции конечно проверяет их и
(17:20) накатывает на эту базу данных вот здесь где-нибудь наш этот транзакция Вася который переводит петь Без эфира и у вас соответственно списывается 10 эфира петь и добавляете 10 эфира это одна транзакция то вторая потом третье где-то здесь там добавляются еще там какие-то операции баланс нам и так далее Все это вот так вот как бы накатывается на базу данных далее как в блокчейнах есть процедура отката блока И это не что-то такое прям страшно как бы это совершенно штатная процедура потому что все компьютеры в этой сети Видят друг друга в разное
(17:58) время и вот у нас один произвел блок номер там давайте 50 Давайте Собственно как в обычных там лекциях да как бы я в общем говорю что пилинговую сеть транзакциями можно рассматривать просто как доску объявлений публично совершенно то есть везде как бы все видят абсолютно все транзакции через какое-то время Понятно разные в разное время видеть разных версий но тем не менее как бы все транзакция как бы Она улетела ПВП она там полностью доступна кто угодно и может скачать и точно такой же у нас блок стул то есть
(18:39) такой же как бы пилинговый по сути как бы в котором те кто хотят произвести блог они его публикуют вот мы дошли там до блока номер 49 Вот наши Она вроде бы должна попасть в блок номер 49 У нас есть появился майнер который пошел [музыка] набрал себе в нем там сколько-то транзакций не знаю тысячу две как протоколом определенного наберет себе 10 тысяч транзакций как бы все остальные как бы его блок выкинут скажет типа чувак по правилам по спецификации по коду как бы в блоке должно быть не больше там 2000 транзакций как бы так
(19:20) что твой блог не валидный как бы сам дурак Вот поэтому он берет там не знаю там 2000 транзакции создает блок номер 50 там все эти транзакции перечислены Там и так далее собственно само слово Как бы блокчейн как бы цепочка блоков она построена на том что Хеш предыдущего блока включается в следующего блока То есть например в пятидесятом блоке вот здесь находится 49 49 48 47 из природных хеширования сейчас тоже про неё чуть-чуть поговорим понятно что испортив хотя бы один бит вот в этом блоке мы испортим очень сильно его хэш
(20:12) соответственно испортили биты в этом блоке испортили биты в этом блоке цепочки вся эта штука прошла а валидировать блокчейн мы можем начиная с самого первого блока с нулевого у него есть название специальная Genesis называется Genesis вот нулевой блок и начинает с него можно перепроиграть Весь блокчейн вот прям все транзакции начиная как бы там с первого блока и вот до текущего Когда вы ставите как бы ноду эфира или ноду биткоина она Понятно есть куча всяких технических ухищрений Как ускорить процесс но как бы в теории
(20:55) самые как бы такой самый секьюрный надежный из этих процессов это прям берем первый блок накатываем Все транзакции мы берем первый блок накатываемся транзакции 2 3 миллионный миллиардный блок и наконец доходит до того который прям вот сейчас как бы сдается и у нас консистентная стенде точно такая же как у остальных все остальные видит в этой ровно то же самое что и вы вот ну и проверяется Да к Вот это наследование блоков проверяется за счет включения предыдущего блока вот значит вот у нас как бы вот этот Я его назвал м майнер но уже можете
(21:34) отучаться как бы от этого слова Вот уже это так не так уж особо как бы популярный эфир буквально несколько дней был огромное событие в эфире прям очень серьезная как бы это он перешел на пруфов стейк поэтому никого майнинга теперь как бы в эфире на видеокартах радостно новость когда видеокарта теперь сильно подешевеет потому что майнить Эфир уже будет не нужно называется вот эти вот ноды которые производят блоки там не знаю валидаторы валидаторс там в эфире во многих сетях называется валидаторы как бы ну еще
(22:13) Самый наверное Точное название было блок продюсер то есть в одной из сетей как бы его с как бы они назывались блок продюсер припомню самый Точное название То есть это ноды которые хотят произвести блог блокчейнах так это большая публичная пилинговая система Вы можете кто угодно может произвести блог Ну при наличии там у него определенных ресурсов если это майнинг должна быть огромное мыслительная мощность это пруфов стейк у него должны быть там замороженные там деньги на деньги на балансе Вот соответственно производит вот этот
(22:51) наш майнер 50 блок в этот момент второй майнер глядя тоже на блокчейн вот в этом состоянии То есть он тоже докачал пока до 49 он тоже производит 50 блок Он берет другие как бы транзакции ему они больше понравились и более выглядит как бы это транзакшн пола со своего ракурса То есть он там не знаю в Китае как бы первый майнер в Америке Они видят разные наборы транзакций у нас создал Короче говоря свой собственный 50 блок и в блокчейне Ну то есть те кто следует протоколу еще раз повторяю как бы ноды они качают этот блок тоже номер 50 И в
(23:29) этот момент как раз начинает работать алгоритм консенса который выбирает из этой цепочки одну и только одну истину то есть в разных алгоритмах сделано по-разному вот но все вот эти блоки они все сохраняются приходится за безопасность когда так платить как бы блокчейна даже вот эти вот ошметки боковые сохраняют тем не менее Почему Представьте ситуацию сначала 50 наш как бы сначала первый майнер как бы создал блок номер 50 все тело приняла вот это 50 блоке была Вася на транзакция Вот она как бы Вася доволен значит он отправил
(24:12) там кому-то там 10 эфира или недоволен вот а потом пришел второй майнер и он Вася на транзакцию не видел Он создал 50 блок без этой транзакции но алгоритм консенсуса выбрал его блок как правильный то есть в этот момент происходит откат То есть если кто базы данных называется Roll Back откат транзакция Смарт контракт называется реверт все эффекты вот этого блока полностью удаляются то есть база данных откатывается к предыдущему состоянию которое было на 49 блок и накатывается как бы то что было то что было 50 теперь
(24:55) в этом стоит состояние новое понятно что не Все успели не все увидели как бы вот этот 10 блок Вот Но все равно при одном и том же наборе блоков когда все скачают вот это вот все У них все равно как бы будет в одном и только одном состоянии возможно ситуация когда первый наш майнер не сдается и начинает создает блок номер 51 указывая в качестве родительных родительского блока блок 50 Вот кстати блок называется Анкл Анкл блокс как бы они называются как бы то есть дядя там типа братья папы Вот это мама соответственно он продолжает короче
(25:41) майнить и как бы создает 51 блок на основе пятидесятого блока и консенсус может спокойно выбрать что вот теперь когда появился 50 блок мне уже вот эта цепочка не нравится а нравится вот эта цепочка и тогда тоже вот здесь происходит откат как бы накатываются транзакции вот из этой цепочки Вот то есть такая ситуация Здесь тоже возможно то есть блокчейн на конце он такой как бы разлохмаченный вот и производители блоков Они соревнуются между собой чей блок будет принят вот понятно что там в каком-то прошлом может
(26:22) не очень как бы далеком уже как бы смысла там пытаться на майнить такую здоровую цепочку А это может быть технически Вычисли то невозможно как бы или там Нереально там другим причинам это мы с вами концентрация посмотрим но важно понимать во-первых что блокчейн что блоки это вот такая вот структура Она правильно называется Да Директ оциклик Граф то есть направленное циклический Граф у которого все все связи направлены в одну сторону поэтому направлены и нету кольцевых связей то есть нету замкнутых конкурса поэтому
(27:03) как не знаю как канат разлохмаченный как бы на конце Ну вот здесь есть да какие-то Старые ответвления как бы там может там где-то здесь там не знаю какие-то старые как бы цепочка вот ну тут такого вида как бы блокчейн с собой представляет из любой момент имея как бы какой-то набор блоков вы всегда можете по нему пройти и пройти по одной и только одной цепочке причем опять же что важно никакие внешние данные здесь не работают то есть никаких внешних сервисов никто ничего не опрашивает все решения принимаются строго на тех данных которые есть в
(27:41) блоках то есть не но алгоритм по-другому не работает блокчейн опирается строго на то что есть только в блокчейне все с внешним миром никак не связан данный из внешнего мира там специальным искусственным способом там добавляются в блоке но решение консенсусе о том какой блок следующий Какие транзакции валидные какие нет его принимаются только на основании протокола блокчейна и данных которые есть в блоках Вот соответственно транзакции с этих блоков как я сказал как бы накатывается на это стоит тебе и в конце концов появляется кто-то уж не
(28:20) важно кто там 50 блок там или вот это 51 победил в конце концов 51 блок доезжает такие как бы уже возвращается обратно и спиннинговой сети в тот компьютер которому обращался Вася когда отправлял твой транзакцию это компьютер получает блок номер 51 должен здесь 51 блоке его транзакция была или там 50 договорились здесь была транзакция Ну соответственно победила вот это вот цепочка Вот и Вася соответственно обращает сюда и так все 51 блок был накачан на стоит просто спрашивает баланс как бы у этой базы данных 90 купить
(29:09) например вот это такая как бы общая схема процессинга транзакций в блокчейнах все это как бы стоит на на трех таких китах криптографических там Ну вот если там пример Короче говоря там транзакция Но это мы с Вами еще посмотрим как бы тут наверное интересно как бы там индекс транзакции То есть кому она отправлена вот то что есть хэш блока которому она принадлежит его она отправлена Там и так далее номер блока тоже то что я пишу 4950 у этого есть название блокчейне высота то есть высота блока и может быть много блоков как бы с одной
(29:59) и той же высотой вот значит Поехали дальше значит как вот это вот вся история организована то есть на чем вообще вся безопасность этой штуки зиждется первый слон на котором все стоит это хеширование у нас будет лекция симметричной криптографии мы обязательно глубоко посмотрим Как строятся как бы эти правильные протоколы но как бы что такое криптографический Хеш Вы должны прям знать прям На зубок то есть изначально Эта история пришла из симметричных Крипто систем где у нас было какое-то открытое сообщение Алиса Боб они знают какой-то секретное
(30:47) слово или там пароль который мы будем называть ключом Алиса зашифровывает свое сообщение секретное точнее зашифрует это м открытый месяц секретным ключом получает шифра текст вот этот C управляет его Бобу Боб соответственно делает decription и тем же самым секретным ключом расшифровывает шифратекст и получает открытые сообщения обратно такая как бы общая схема и вот эти все алгоритмы они очень широко используются сейчас там любой там трафик как бы шифруется как бы все все наверное как бы уже многие про эти алгоритмы слышали но очень важно как
(31:36) бы понимание математических свойств который называется рассеивание и перемешивание мы еще раз на них как бы остановимся чтобы у вас не было никогда каких-то иллюзий но смотрите Я смотрю на etherscan вот здесь вот вижу короче какой-нибудь Хеш транзакция вот у меня есть транзакция А вот ее криптографический Хеш как думаете можно найти где-нибудь в эфире или в мире как бы Хеш который расположен там в радиусе там не знаю там ну в диапазоне там хотя бы там не знаю там 100 миллиардов как бы от этого США Ну да я как бы к тому что
(32:25) криптографически это такие как бы штуки что вы не найдете два даже близко похожих которые отличаются там на 10 на 100 на миллион на миллиард на сто тысяч миллиардов то есть числа слишком большие и сделано это так чтобы хеши были уникальными цифровыми идентификаторами любой информации взяли букву а получили от нее взяли букву Б взяли от нее Они вообще не похожи как бы вот этих ошибках сделано за счет этого рассеивания перемешивание информации это то зачем работал Тюрин Шеннон и так далее собственно криптографа математики
(33:05) которые сделали аппарат математический для шифрования в чем суть этих штук смотрите у нас есть открытое сообщение какая-то цепочка бит Ну прям уже симметричный криптографии работают исключительно сбитыми У нас есть какой-то секретный номер 1100 неважно затем мы делаем наше какое-то там зашифрование расшифрование то есть какой-то хитрый алгоритм придумали и получили шифра текст он тоже там 1011001 вот что такое рассеивание перемешивание это свойство хорошего шифра то есть в чем суть вот этого аппарата было который разработал тюнинг вы придумали
(33:55) хитрый способ шифрования хотите проверить Он хороший или плохой или где-то накосячили вас математике какие-то перекосы Как понять хороший шифр или плохой и вот как бы хороший шифр обеспечивает вот этот рассеивание перемешивание Что такое рассеяние рассеивание говорит о том что если я изменю один бит даже один бит в исходном тексте И проведу вот эту операцию этот бит повлияет повлияет на все битые очень сильно шифра текста То есть он должен так типа рассеется как бы по ним значит что значит очень сильно повлияет очень
(34:35) сильно повлияет это означает то что каждый бит вот этого сообщения поменяет свою поменяет свое значение инвертируется с вероятностью 1/2 То есть это тоже принципе очень как бы легко на пальцах понять То есть я изменил здесь буквально один бит и где-то примерно 50 процентов битов шифра текста должны измениться должны измениться свое значение не знаю какие как бы понятно что детерминированные ведь между Надо обратно восстановить да то есть алгоритм должен уметь обратно когда сделал устанавливать они просто взять Рандомные виды поменять он должен
(35:12) специально способом сделать так чтобы изменения одного бита повлияло вот на вот эти вот все максимально причем именно как бы с вероятностью 1/2 Потому что если будут какие-то перекосы например там только последние биты изменится или только Первый вид изменится Это все позволит как бы про Ну проводить такое как бы частотный криптоанализ очень там соответственно хотя бы примерно угадывать Что там находится как бы за шифра текстом вот а этого не должно быть поэтому это рассеивание перемешивание это тоже свойство оно касается ключа То есть я не
(35:50) трогаю вообще как бы исходное сообщение я как бы меня в нем один бит и точь точно также это дело это сильнейшее влияние как бы на вещи протез Неважно как бы если я букву А как бы зашифровал одним ключом и получил как бы какой-то текст и такую же букву а зашифровал ключом который на один бит отличается от этого у меня будут совершенно разные шифра текста Вот они прямо прям прям совсем никак не сравнимо Хотя как бы ключи на один вид всего отличаются Ну и то же самое касается как в открытых текстов Вот это два таких очень мощных
(36:27) свойства из которых еще можно довольно интересную штуку углядеть Если вы будете смотреть на зашифрованные данные современными хорошими криптопротоколами и начнете в них как бы мерить количество единичек и ноликов то вы увидите что их примерно поровну он вот из того что как бы я сказал Да что типа примера с вероятностью 1 2 должны поменять значение выглядит эти выглядят вот эти вот шифры тексты так как будто кто-то монетку сидит подбрасывает Орел Решка Орёл решка орел решка в разных комбинациях но ничего никакой
(37:05) статистики отсюда вывести не можете малейший перепост там куда-нибудь там не знаю если здесь больше ноликов то вот и здесь как бы больше ноликов это уже дыра в Крипто протоколе То есть это уже как бы позволяет криптоналитикам уже что-то там какие-то предположения когда внутренних внутреннем документе как бы шифровальному иметь и вот это вот свойство как раз хеширование построено как раз на вот этих вот алгоритмов По большей части там очень-очень Похоже как бы история для того чтобы достичь вот такое такой штуки
(37:45) как бы в мире битов знаете не так много хороших операций обратимых там есть ссор какой-нибудь есть там циклический сдвиг То есть можно там циклически сдвигать вправо влево можно поделить на куски как бы снова собрать одну половину там не знаю как ссорить как бы другую сдвинуть то есть на самом деле операции которые можно сделать бинарных не так уж и много Вот потому что да Когда у вас есть вся вселенная из двух чисел состоит вы не так много как бы с ними можете делать и поэтому как бы все вот эти вот алгоритмы современных шифрования они вот
(38:23) берут исходный текст его разделяет на куски там солят с ключом потом сдвигают там на три позиции влево потом опять ксор потом опять позиции вправо потом там что-то замены и так далее Все это как раз с вами как бы обсудим Но получается вот такой каша как бы избитов И если мы например возьмем с вами какой-нибудь алгоритм шифрования там современный и начнем шифровать один потом двойку тройку четверка пятерку и так далее с одним и тем же как бы ключом а то у нас будет получаться такая последовательность чисел который
(39:02) называется псевдослучайная то есть она снаружи Если вы начнете статистику мерить этих чисел она будет как будто выбрасывать случайные числа как лотерею как бы играете Вот они будут с равными вероятностями то есть абсолютно ровно размазанные по числовой кривой Ну следует как раз свойствами хорошего Крипто алгоритма и на основе как бы вот этих вот симметричного шифрования построены генераторы случайных чисел которые вы используете программ всякие рады и так далее и все вот эти механизмы используют А хеширование смотрите
(39:43) хеширование оно тоже строится на вот этих симметричных алгоритмов Она говорит но это алгоритм полностью публичный То есть он вообще открытый то есть ключ все знают например ключ 12345 и алгоритм хеширования может выглядеть так берем файл произвольной длины там или файлы строчку пить как бы Нева один петабайт 1 мегабайт 1 килобайт неважно когда гром длины берем как бы его поблочно берем первый блок зашифровываем его вот этим вот нашим как бы ключиком получаем какое-то зашифрованный текст сцепляем его со следующим блоком проводим еще одно там
(40:26) шифрование цепляем его со следующим блоком Вот и у нас получается такой последний как бы бачок длина будет современный как бы алгоритмы шифрования хороший там А есть как бы они работают с блоками длиной 256 такая сейчас считается секьюрная битность современных Крипто алгоритмов размер ключа 256 без размер блока там 256 и так далее То обсудим и вот у нас получился такой последний блок смотрите какой он интересный он зависит от всех битов вот этого файла причем не важно этот файл петабайт занимает То есть он просто
(41:07) немерено огромный стоит вам тронуть один бит в любом из этих блоков у вас разломается вот этот вот разломается вот этот вот разломается вот этот и вы получите совершенно другой кэш абсолютно то есть прям который будет отличаться очень сильно отличаться очень сильно вы уже тоже знаете как бы что значит очень сильно очень сильное криптография Это означает что примерно половина битов как бы поменяла свое значение Вот и вот эта штука является таким прекрасным цифровым отпечатком таким идентификатором данным используется вообще повсеместно
(41:43) хеширование где угодно не знаю файловых системах телекоммуникации очень широко используемый алгоритмы вот Ну и конечно же как бы как раз в крипте это ши блоков это хешит транзакций То есть если вы видите транзакция Вы можете самостоятельно проверить что вот тело этой транзакции вот оно там с точностью добита она прям вот ее типа орал образ который как бы там не знаю там пачка байт что она не была там не знаю подделана что она была как бы представлена и так далее и в принципе когда кто-то кому-то криптой платит
(42:24) обычно кидает вот я тебе заплатил как бы не знаю вот хэш транзакции иди посмотри по нему я могу сходить на сайт но могу в общем ты сам обратиться к своей собственной ноги блокчейне сказать Типа Найди мне пошутил транзакция торрентах файлы ищутся по хэшам вот во всех там не знаю там облаках и так далее для исключения дубликатов тоже как бы файлы обязательно хеширует сохраняться как бы их решить это вот собственно такой первый как бы такой криптографический слон на котором все это строится второе слон это цифровая подпись тоже Мы
(43:01) тоже бежим как бы Галопом по Европам в данном случае это концепция асимметричных криптографии появилась она там в семидесятых годах значит там мы с вами посмотрим как бы difylm и так далее используется тоже крайне широко там кто-то любит приводить не знаю сдачу бухгалтерской отчетности там ЭЦП которые получают центрах Но на самом деле самая широкое применение вот здесь вот в этом замочке как бы когда вы соединяетесь с сайтом по протоколу https То есть когда вы как бы я захожу на google.com мой браузер просит Google
(43:42) Come доказать как бы что это он мне сейчас отдает веб-страницу То есть он его просит подписать данные которые подготовил мой браузер мой браузер кидает Гуглу Рандом и говорит а подпишись к своим публичным ключом Вот и соответственно Google подписывает и тогда я мой браузер уверен что попал туда куда надо сама концепция вот этот вот публичных приватных ключей там под капотом на самом деле Ну значит Представьте У меня есть там у нас опять же Алиса и Боб они могут при помощи некого математического алгоритма создать
(44:20) пару чисел одну из них назовем публичный ключ а другой назовем секретный ключ публичный ключ типа Можно шарить можно там куда угодно там не знаю показывать как угодно а секретный ключ всегда лежит приватный сохраненный как бы никогда не покидает там устройство то есть его Алиса хранит секрете строится они Ну на самом деле пары этих чисел как бы строится на основании так называемых односторонних функций например как бы зная секретный ключ получить публичный ключ легко вычислить а зная публичный ключ вычислить
(44:59) секретный ключ Вычислите невозможно но можно привести в качестве примера вот такую функцию G в степени x по модулю P это система РСА строится на основе такой как бы функции значит предположим Y это у нас публичный ключ А вот это у нас секретный ключ X значит зная X это публичные параметры просто огромные числа там типа такие два 2048 огроменный зная X зная X до получить Y очень просто потому что возведение в степени если кто-то там с алгоритм дело имел дата сидение степени Оно такое очень здорово оптимизировано там берутся возводятся
(45:47) степени там близких степени двойки вот там этот алго вот реально быстро а вот обратно посчитать так называемый дискретный логарифм А пупака нельзя для таких для таких чисел как бы это безумные вычисления как бы и сейчас это сделать невозможно есть там алгоритм Шора который на Quantum компьютере в теории как бы позволяет Вот это дело проехать вот ломать там читать дискретный логарифмы но как бы пока еще до этого далеко Вот в общем такая как бы пример односторонней функции вот у нас есть вот такая вот пара чисел а теперь Представьте что мы
(46:27) их приспособили для того чтобы зашифровывать расшифровывать информацию то есть как бы спрятали информацию получили какой-то текст раскрыли в этих системах так они так и называется асимметричные публичный ключ если что-то мы зашифровываем публичным ключом то мы его можем расшифровать при помощи секрета Вот и наоборот То есть если мы что-то зашифровали при помощи секретного мы можем его расшифровать при помощи публичного Ну такой как бы сделали как бы ребята такой математический аппарат который позволяет сгенерировать два
(47:07) числа которые обладают такими свойствами свойствами и описали Как при помощи публичного ключа зашифровать а секретного расшифровать соответственно то что зашифровано публичным ключом расшифровать может только тот кто знает как бы секретный ключ остальные не могут первая схема которая здесь напрашивается всем называется секретной передачи информации когда Алиса говорит Боб вот тебе мой публичный ключ Алиса Алиса Давай зашифровать для меня как бы данные при помощи моего публичного ключа и Боб собственно вот этот и делает
(47:51) то есть по сути Ну и только Алиса соответственно Может их расшифровать [музыка] чем эта схема как бы удобно еще с точки зрения телекома тем что как бы Алиса Может рассказать свой публичный ключ вообще всем всему миру там Алиса например Это Google Вот и говорит Кто хотите можете для меня информацию зашифровывать моим публичным ключом любую как бы и нам не нужно вот этот обмен ключами там что-то там еще там делать как бы позволяет такие не интерактивные схемы строить но нам Эта история не сильно как бы интересно нам
(48:31) интересно вот это вот то есть смена ролей этой штуки Это схема электронной подписи ее тоже надо прям очень хорошо понимать как она работает и так У Алисы есть публичные ключи секретные ключ Алиса она Богу как бы сообщает Каким образом каким-то образом свой публичный ключ проверяем мою электронную подпись при помощи него при помощи моего публичного ключа затем у нее есть какой-то документ [музыка] юристом люблю вот так вот рисовать Да какой-то не знаю файл транзакция бинарный буфер так вот и она хочет его подписать
(49:11) подписать то есть она хочет продемонстрировать всем У кого есть публичных ключ Алисы что она за процессила вот этот файл как бы до последнего бита То есть она либо документ в Орде глазами посмотрела либо ее сервер как бы провалидировал этот транзакцию и сказал типа Ок Что она делает она считает криптографический Хеш от этой штуки затем она этот хэш зашифровать своим секретным ключом и получившиеся вот эта штука как бы является электронной подписью этого документа сам документ не секретный схема подписи ничего не надо И вот это вот штуковина
(49:54) она полностью отправляет Богу Бог получает документ возможно его перехватили там чуть поправили здесь там 10 тысяч на 100 тысяч вот получают ее электронную подпись и делает обратную операцию То есть он берет электронную подпись берет публичный ключ Алисы которые тоже понадобится Затем он расшифровывает публичным ключом Алиса вот эту подпись и должен по идее получить Хеш документа если все верно он его считает конечно и самостоятельно и потом сравнивать соответственно если они равны то только Алиса при помощи своего секретного ключа могла поставить
(50:37) как бы вот эту электронную подпись Ну соответственно Если как бы подпись не верна то Боб ничего не может сказать точно потому что у него то ли здесь что-то испортилось то ли здесь что-то испортилось может здесь что-то испортилось То есть просто не верна и не верна Вот и как бы Понятно Что по свойствам как бы шифрования Да отличие этих и шеи они будут очень большие то есть там какие-то прям очень серьезные то что есть рассеивание перемешиваем Вот это электронная подпись с момента подписания еще раз после получения Алиса сделала
(51:28) как раз вот этот электронную подпись отправил Этот документ Богу вот я там не знаю там хотите есть еще аналогию то это какая-нибудь компания которая сдала бухгалтерскую отчетность сделала zip файл у этой компании есть секретный ключ она этим секретным ключом этот zip файл подписала и отправил в налоговую здесь как бы налоговая в налоговой есть табличка как бы что о там такой-то такой-то у него вот такой-то публичный ключ и соответственно значит налоговые скачивает zip файл который прислали получает электронную подпись у нее есть публичный
(52:14) ключ этой компании зарегистрированы в реестре Она при помощи публичного ключа проверяет электронную подпись и когда мы с вами рисовали то что то что зашифровано при помощи секретного ключа может быть расшифровано при помощи публичного ключа здесь делается decription при помощи публичного ключа расшифровывается именно или сама электронная подпись после этого должен получиться Хеш документы криптографические потому что до этого как бы подпись это зашифрованный зашифрованный Хеш от документа который зашифрован секретным
(52:57) ключом Вот и при проверке Боб наш налоговая она сама считает крипографический Хеш и сравнивать с тем что получилось вот здесь при проверке подписи если они равны то подпись верна потому что только владелец секретного ключа мог бы сгенерировать вот такую подпись получается у нас Смысл в том чтобы публичный ключ и данные получились разных источников если мы от одного и того можно подменить Да можно Ну именно поэтому и существует ваш TPS системы сертификатов которые я показал как бы поэтому как бы надо вот эта регистрация публичных ключей
(53:47) называется при сдаче электронной отчетности называется стране типа мне надо сходить получить ЭЦП получить ЭЦП это по сути зарегистрировать публичный ключ Поэтому да как бы из разных источников но как бы блокчейнах это не сильно важно как раз сейчас перейду как раз как это используется блокчейна блокчейна все на самом деле находится на борту транзакция значит смотрите Как это работает блокчейне там я не знаю мы уже давайте я буду правильно уже называть как бы вещь своими именами А я буду вот эти вот адреса называть как бы адресами в
(54:29) блокчейне этот From как бы ту Значит у нас есть Вася у вас есть секретный ключ Вася у него есть публичный ключеваяся вот публичный ключ и вот из этого публичного ключа получается адрес Вася есть некоторые путаницы то что в некоторых блокчейнах как бы адресом является прям публичный ключ И мне проще сильно объяснять вам если я скажу что блокчейнах все пользователи адресуются как бы при помощи своих публичных ключей Ну как бы чисто технически как бы там скажем в эфире как бы адрес это 160 бит первых или последних от США
(55:11) от публичного ключа вот так берется уличный ключ от него берется хэш от него берется как бы 160 бит и получается такая вот строчка Ну там есть там собственном основании Почему так Сделано в биткоине тоже как бы но тоже все наследуется публичного ключа и когда Вася хочет отправить кому-то транзакцию он создает там транзакцию типа Файлик вида Я Вася это вот мой адрес хочу на адрес Петя отправить там не знаю там 10 эфира а и Вот соответственно Моя электронная подпись от этой штуки и подпись Просто она сделана таким образом что из неё
(55:53) можно достать публичный ключ Вася из этой подписи но просто она так организована вот здесь вот этих вот значениях vrs Вот это собственно подпись транзакция из нее как бы при помощи определенной операции извлекается прямо публичный ключ просто сделан для удобства чтобы не надо было дописывать еще сюда публичный Ключевая проверка То есть я под подписью теперь буду подразумевать как бы [музыка] в эфире биткоине подписи с которой извлекается публичный ключ вот значит почему типа кто угодно не может это сделать Ну во-первых как бы
(56:34) кто угодно не может подписать транзакцию от имени Вася не зная секретного ключа Вася вот во-вторых он не сможет забрать у него 10 эфира потому что Вася когда как бы 10 эфира тратить в таблице вы написали что Вася как бы есть там не знаю там 50 короче есть три эфира и конечно и там типа если ничего не подменишь как бы эти не может как бы взять сказать Я Петя как бы хочу там не знаю кому там Миша отправить там 10 эфира с адреса Вася и поставить подпись Вась Не сработает вот так что как бы каждый транзакция в блокчейне обязательно подписывается
(57:24) строго подписываться электронной подписью это вообще повсеместно И когда я говорю что майнер или там блок продюсер как бы он формирует блок и вставляет сюда транзакция а кто-то там типа другое получив новый блок он его лидирует то на самом деле это означает что он бежит как бы по транзакции и конечно же обязательно проверяет электронную подпись каждый из вот этих транзакций по всему прям надо короче говоря проверить опять же чуть-чуть как бы Кремлю душой то что я вам рассказываю как бы про как бы блокчейн на который
(57:58) как бы сверху не наложили еще там различные там оптимизации и так далее об этом будем отдельно говорить говорю о таком как бы об абстрактном как бы блокчейне Который прям самый как бы надежные где задачи прям лоб решаются при формировании блока майнер конечно провер обязательно вот эти подписи потому что сделает он как бы блок в котором где-нибудь вот здесь фейковые транзакция или Вася переводит Кому вы там миллиард эфира как бы у него на балансе просто нету каждый транзакцию проверяет обязательно его майнер но этот блок просто выкину то
(58:38) есть кто-то другие компьютеры в сети как бы его возьмут начнут накатывать транзакции обнаружить что Вася нет эфира еще что-то скажет А Блок фигня Все откатывается просто его откатит Вот и при этом значит почему здесь еще Ну так уже чуть-чуть так смещаясь еще в сторону наверное экономической безопасности Почему как бы блокчейнах в эфире как бы выгодно производить блоки потому что по той же как бы спецификация то есть по тому как бы как вот этот блок как бы валидируется в блоке в конце последней транзакции должна быть
(59:17) обязательно так называемая у нее специальное даже название Point Base называется транзакция это биткоины в эфире которая по сути представляет собой транзакцию из никуда из воздуха на Адрес майнера точнее просто на адрес который укажет тот кто произвел этот блок то есть Неважно кто там произвел как бы он может показать любой адрес положить добавить Короче не знаю там 6 там 25 то есть Это последняя должна быть транзакция награда как бы майнеру за то что Он произвел блок поэтому майнеру выгодно что его блок будет принят сетью
(59:59) что никто как бы его не выкинет что здесь нигде не ошибся как бы что его будут продолжать распространять как бы по другим машинам и другие машины как бы будут на основе его блока уже начинать строить следующее таким образом как бы закрепляя вот то есть формируется почка поверх него много от алгоритмов консенса зависит Вот Но тем не менее то есть произвести блок выгодно а вот в общем это вот то что касается соответственно электронной подписи То есть все как бы все строится на электронной подписи как бы здесь она
(1:00:35) постоянно используется более того где она еще используется это опять же если говорить о консенсусах Когда происходит когда у нас есть вот эти вот уже там наши не знаю валидаторы давайте уже правильно майнеры блок продюсеры То есть те кто производит блоки каждый из них периодически предлагает блок всем остальным он говорит Ребят я создал как бы новый блок Как вы там примите не примете случае майнинга он прилагает к этому к этой штуке Там специальный хэш который по которому понятно что он потратил там кучу Там мегават как бы
(1:01:20) энергии на то чтобы такой хэш просто получить Все просто и остальные его просто принимают этот э-э блок как бы Если это достаточно сложный А вот в алгоритмах proof of stake proof-фавторите как бы в нормальных таких цивилизованная которая считаю там ставится так называемые аттестации на блоке то есть валидатор предлагает блок другой валидатор его скачивает он его проверяет и говорят Да чувак твой блог правильный затем второй как бы перепроверяет да твой блог правильный Мне нравится там третий как бы отвалился у него Интернета нет
(1:02:02) 4 подключился да твой блог правильный и вот эти вот штуки Это тоже является по сути транзакциями тоже является электронными подписями то есть они просто подписывают блок стоят электронную подпись этом блоке и когда этот блок набирает как бы там не знаю больше там пускай там больше двух детей голосов он считается все финализированным то есть считает что он все закрепляется в цепочке в принципе данные из этого блока можно начать оптимистично использовать И заранее То есть пока его пока его не приняли То есть у нас идет цепочка
(1:02:42) давайте уже как бы в рамках наша как бы надо то есть наш собственный блокчейн не знаю надо вот у меня здесь есть например [музыка] вот он собственно смотрит куда-то там в какой-то компьютер обращается к нему и спрашивает типа какой баланс сейчас у адреса там у такого-то вот там какой баланс вот у этого адреса он на самом деле под же сон rpc сейчас как бы пингует какую-то какую-то блокчейн надо и обращается к ней в ее базы данных и говорит А какой баланс вот у этого адреса она ей отвечает затем как бы это надо
(1:03:29) выкачивает новый блок этот блок еще не финализирован на нем еще не поставлены вот эти вот аттестации То есть она его скачала она его сама как бы проверяет она его сама проверяет как бы на корректность Но на самом деле ждет до тех пор пока не будет собрано достаточное количество этих аттестаций в этот момент блок считается финализированным и довольно важная вещь которую мы будем разбирать в конце что сети которые построены как старый как бы эфир пруфов Work майнинг биткоине это так называемый промобилистический
(1:04:10) консенсус то есть там ну в теории если где-то сидит какой-то инопланетянин с огромным суперкомпьютером и подманивает там как бы цепочку биткоина Да и нам ее не показывает как бы цепочку биткоина но у него огромный вычислительные мощности он там вот эти красивых шишек бы ищет в лед то если он опубликует эту цепочку вдруг неожиданно то есть всех перевести они практикующий биткоин вообще забудут Они возьмут более вычислить сложную цепочку выберут то что как бы более вычислительно сложно и вот эти что транзакциями
(1:04:58) откатывается если они перестают существовать то есть здесь не надо думать как финансист вот надо думать как как разработчик вот есть табличка там где у Васи как бы там 100 как бы да А у Пети 10 вот транзакция как бы Вася Петя перевел 10 Да как бы у него стало 90 а у этого стало 20 вот накатили блок накатили блок он добрался до финализации То есть как бы его там аттестовали или прошло какое-то время в пруфофорте после майнинга и вот эти вот изменения они в базе данных как бы считаются валидами зафиксированными Но если блок откачан
(1:05:51) откатывается то все обратно возвращается то есть никакой но никакой Петя ничего не получал как бы вот все Остались как бы при своих Просто когда я рисовал еще вот эти вот блок с пул Почему мы с вами как бы вот этого не видим как бы вот это вот борьбы как бы такой как бы баланса да Потому что когда у нас майнер производил 50 блок он скорее всего ну точнее два майнеры они конкурировали как бы этот блок они скорее всего оба взяли нашу транзакцию и тот и другой и поэтому то что мы как бы откатили накатили другую версию блока все равно как бы от
(1:06:28) вас и петь как бы 10 эфира перешло потому что майнеру выгодно включить транзакцию получает еще комиссии с этих Понятно ответил То есть просто прям вот чисто откатываются все транзакции в блоке так как будто бы их не было Чё там кто там куда там деньги делись это отдельный вопрос как раз отдельного как раз есть атака так называемый двойной траты которые там еще там говорят там А так 51 процентам и так далее так далее курс мы все это посмотрим обязательно то есть на это удобно смотреть как на базу данных как бы на которую накатывается
(1:07:11) последовательно как бы транзакции накатываются они вот такими пачками и могут откатываться пачками как бы обратно и соответственно кататься дальше да да блокчейн можно откатить до любого блока назад как бы и полностью перепроиграть как бы там заново вот это вот цепочку И кстати когда мы будем пробовать у вас будут задания по сути типа остановиться Вот на этом блоке прямо в текущем состоянии и там что-то на менять как бы то есть притвориться там узлом там еще там что-нибудь поделать здесь повторяемость и вот это реплея билити она как бы
(1:07:55) полная то есть мы можем всю историю эфира до последней транзакции до последнего бита полностью проиграть как бы с нулевого блока биткоина что эфира вот абсолютно как бы остановившись на любом блоке всегда будем получать консистентную вот эту базу данных вот так значит про Genesis значит про такой какой-то такой базовый отбор про это рассказал Так теперь соответственно уже да еще Короче говоря еще глубже когда соответственно погружаемся в эту историю значит про вот этот валидацию блоков про создание про создание валидации блоков
(1:08:43) что тут Важно а то есть сам протокол биткоина или протокол эфира или там еще что-то как бы это же это по сути не знаю PDF документ PDF там или как бы MD то что по сути Это просто как бы спецификация этих блокчейны тоже отличается от традиционного софта то есть там этериум грубо говоря вот эти Там его надо а их штук пять или шесть разных из них там две нагона описанные плитации там что-то одна нарасти как бы одна на Джаве одна на си шарпе там и какие-то куски как вот этой логики бы там написано буквально на всех языках то
(1:09:32) есть они все просто по сути следует вот этой вот спецификации а спецификация она как раз и говорит о том как валидировать блок значит я производитель блоков значит я хочу произвести все это дело сейчас я уже буду наверное Как бы говорить про майнинг потому что ну такой как бы классическая штука Но если вы смотрели программу курса то там Bitcoin на самом деле находится в самом конце Вот потому что ну во-первых как бы с точки зрения кода там не очень как бы сильные там этой интересно вот но тем не менее как бы он очень красивый такой
(1:10:11) минималистичный секьюрный как бы клевый Вот но конкретно блокчейн-разработчики под биткоин особо не пробуют есть определенная вот сейчас по большей части занимаются именно смарт-контрактами мы будем с вами заниматься именно смарт-контрактами вот значит что делать соответственно майнер он пошел соответственно в вот этот пул X пул набрал как бы транзакций в каждой транзакции при этом как бы каждый транзакции находится комиссия для майнера которая устанавливается чисто пользователями То есть вы когда шлете куда там криптовалюту вам вы указываете
(1:10:57) Какое сколько вы за это готовы заплатить И вы платите конечно же в этой же как бы родной криптовалюте это на самом деле довольно важный Point То есть вы не какие-то там деньги платите за транзакцию А у вас строго списывается баланс нативной криптовалюты то есть родной для данного для данного блокчейна в эфире эфир биткоине это Bitcoin там сколько дот salani Soul и так далее То есть там есть в каждом из таких блокчейнов есть как бы своя нативная криптовалюта очень просто определить это так который платится комиссии за транзакция
(1:11:36) Вот потому что майнером на самом деле пофигу что там какие там токены внутри кто кому там передает каких проектов и Мы совершенно не важно как бы они работают в эфире Поэтому у каждой транзакции есть вот здесь вот размер комиссия это будет довольно довольно сложное на самом деле штука мы будем разбирать это сделано он суммирует соответственно все как бы вот эти вот комиссия получает там сумму со всех транзакций добавляет себе coinbase транзакцию там не знаю два эфира в подарок себе там за блок Плюс вот это вот сумма
(1:12:17) соответственно всех вот этих вот комиссий Затем он в блок ставит обязательно таймс Темп время данного блока потому что у нас когда идет с вами цепочка понятно что в каждом блоке есть он не может быть из прошлого он не может быть далеко из будущего это тоже как бы спецификацию внесено но при этом майнер может немножко его как бы двигать вот здесь вот у него там разное время он может по-хорошему выбрать как бы там текущее время или там минус 2 секунды или 10 секунд как вам нравится самое главное что вот этот таймс Темп он зафиксирован в блоке
(1:13:03) затем обязательно предыдущего блока качество [музыка] следующая крайне важной штуковина это так называемый стоит Root а про это тоже как бы надо отдельно поговорить значит когда мы с вами обсуждали вот этот нашу State базу данных я там рисовал соответственно табличку я рисовал табличку с адресами адрес Васи как бы баланс эфира его значит вот это вот структура внутренняя на самом деле там есть еще разные там служебные поля например вот важные поле нонс такой монотонный счетчик который Вася считается с каждой транзакцией Каждый
(1:14:00) раз когда Вася отправляет транзакцию у него как бы было единичка потом стала двойка тройка как думаете Зачем чтоб не учесть дважды одна транзакции Да совершенно верно чтобы не было Атак реплей А то мы взяли как бы эту васину транзакцию как бы которая 10 эфира Петя отправляет и как бы еще раз отправили еще раз отправили еще раз отправили как бы и соответственно весь эфир у него высосали весь передали Петя вот поэтому обязательно нужен нонс и конечно же нонс вот сюда как бы в транзакцию тоже включается то чтобы каждая транзакция как бы она
(1:14:42) была новой чтобы электронной подпиской вы подписывал новое пачку Дана и вот это вот внутренняя штуковина она внутри представлена как Киев база данных Ну я не знаю насколько много из вас как бы имели с ними делать скорее всего прям очень много людей как бы из вас знает что такое Манга или что такое radis или такой Тарантул То есть это база которые которые у нас есть SQL там базы данных большие там всякие там mysql с правильными движками постгрис Там и так далее То есть это те у которых прям такая прям табличная организация которая
(1:15:29) работает с кортежами значит там всякие серты апдейты делиты там есть транзакции база данных они как бы сильно проще Они сделаны сильно проще в угоду скоростям то есть Их используют чтобы например там не знаю там держать ваш профиль Ну не знаю там ваш юзернейм Хеш пароля там не знаю там дату рождения то есть такие как бы данные по которым не нужно делать агрегацию то есть какие были базы данных в первую очередь базы данных которых не нужно сделать выборку Выбери мне там тысячу последних покупок вот у этого человека
(1:16:08) еще посчитает этого там средняя а потом использую я не знаю как какой-нибудь там рейтинг там для того чтобы ему там скидку выписать там где нету как бы такой агрегации а есть просто прямой запрос типа Дай профиль быстро быстро Обнови профиль быстро-быстро там еще что-то то есть где там используется вот эти такие были базы данных они в блокчейнах используются то есть не просто не просто как Киеве базах а на самом деле под всеми как бы нодами блокчейн которые вы встретите там находится продукты которые называются
(1:16:44) level db Рокс Рокс диби это Киев базы данных Быстрые как бы которые специально созданы для таких массированных быстрых апдейтов и легкого отката Нам же с вами как бы нужно еще откатывать Да у нас идут блоки как бы опять появился который победил нам нужно все дело быстро откатить базы данных проще делать называемый snapshot То есть как бы кусочек которому ты можешь очень очень быстро откатиться и как бы начать накатывать новые транзакции То есть все данные в блокчейна Вы можете вообще представлять Какие вы ее базы
(1:17:26) данных в основном как бы причем ключами являются вот эти вот картографические адреса То есть у Васи 10 эфира и такой-то нонс и там еще когда про контракт с вами говорить то есть есть набор данных которые привязаны к плечу ключами является вот эти как раз как раз адреса блокчейне и накаты по сути накатывание транзакций из вот этого блока это изменение это всегда как бы набор новых ключей которые нужно добавить майнер первый раз жизни произвел блок Вот и у него теперь как бы стало там два эфира плюс комиссия там не знаю У Васи надо изменить ему
(1:18:17) баланс там не знаю там петь надо каждый как бы блок это набор изменений какой-либо атомарно вот стоит базе данных для того чтобы Ну а теперь Представьте что мы хотим зафиксировать состояние вот этой базы данных в кэше там что сделать как бы прям взять типа всякие Valio отсортировать фиг знает по алфавиту положить вот там вот такой плоский файл как бы от него посчитать это неудобно Вот И для этого используется структура которую мы тоже с вами будем отдельно рассматривать который называется 3 Ну и вообще на самом деле там деревья
(1:19:02) как бы в этих база данных они довольно там часто используются но дерево мертвое оно блокчейнах у него особая роль чуть за структура тоже мы там про ее свойства отдельно поговорим пока как кратенько эта структура которая построена на криптографических Шах Ну предположим давайте так как бы [музыка] здесь у нас будет адрес Васи адрес Васи там не знаю там 10 эфира Ну то есть это просто данные как бы здесь будет адрес Петти как бы 8 эфира здесь будет там адрес майнеры там два эфира Там и так далее от этих данных считается
(1:19:47) хорошими и строится что-то типа бинарного дерева но только вот здесь вот этих вот узлах этого бинарного дерева вот здесь вот находится хэш конкатенации вот этих двух хэшей то есть мы как бы а там H1 H2 А здесь находится хэш 3 H4 то есть они слепляются и как бы скрепляются уже идут до корневого элемента который называется Root штука широко используемая Она кстати используется и в торрентах тоже во всю как бы Когда вы качаете какого-то другого компа кусочек фильма там не знаю там небольшой Вам бы по-хорошему нужно
(1:20:36) доказательство то что кусочек принадлежит как бы к этому фильму а не то что вам скормилию хренотень Вот и вот это доказательство того что только что скачанные там не знаю там несколько килобайт данных а что это что эти несколько килобайт данных они как бы относятся к фильму тоже делается при помощи мертвого дерева значит чем оно хорошо оно хорошо тем что мы можем все вот эти вот наше значение сохранить по сути в одном числе и доказывать то что эти значения находятся в этом листе при помощи так называемого мертвого пруф
(1:21:15) Как выглядит мертвый трус я хочу доказать что Петя что Петя с балансом 8 находится вот в этом вот дереве и у меня для проверки есть только вот одна вот Одно только число что я делаю чтобы доказать как бы что я в этом листе нахожусь Я создаю доказательства следующего вида значит я беру там соответственно хэш от моего вот этого Петя и восьмерки вот беру его меркам доказательства это массив значит в этот массив я кладу вот этот хэш которого мне не хватает как бы H1 теперь я смогу как бы взять Вот этот хэш вот этот и вот это вычислить
(1:22:07) самостоятельно То есть мне не нужно это сообщать Но для того чтобы добраться до Рута мне не хватает вот этого еще хорошо и поэтому я беру еще как бы хорошо [музыка] получается такое как бы то есть я меркнут доказательства это массившей которых не хватает для того чтобы построить полный путь дереву до рута и получается что я таким образом как бы доказал то что вот этот листик принадлежит как бы вот этому дереву и доказал это предоставив о от соответственно логарифм 2n хешей то есть уровни в этом дереве логарифм 2n
(1:22:56) Вот и соответственно я должен логарифм дворянка шеи как бы предоставить для того чтобы доказать что какой-то лист находится в этом деле то есть когда я здесь пишу как бы стоит Root это по сути как раз вот Root всех ключей значений вот этой базы данных у нас произошла какая-то транзакция значит с одного списали там вот это стало 8 этого стало 10 х 6 изменились дерево изменилось как бы я пишу сюда как бы новый стоит Root Вот потому что как бы дерево оно изменилось конфигурации там для этого еще есть специальные еще модификации
(1:23:39) различные всяких мер по деревьев которые используются как раз полностью новая версия отдельно или как новая версия дерево дерево строится как бы в самом как бы в памяти как бы надо она конечно держит все вот эти вот листы в голове когда обновляется в прошлом блоке был старый стоит В общем Ну по сути это как бы Хеш база данных вот этого вот это стоит Database просто организован при помощи вот такого такого вида структур данных принципе точно так же как бы хранятся и TX Root то есть по похожим уже принципу транзакции в блоке они тоже организованы
(1:24:40) в меркал дерево и тоже У него есть труд и То есть вы можете доказать что моя транзакция как бы находится в этом блоке не предъявляя весь блок а достаточно как бы просто предъявить их срут и доказательство того что ваша транзакция как бы она к этому относится не надо выкачивать Весь блок просматривать смотреть если там транзакция или нет Как бы вы можете спокойно доказать что транзакция в этом блоке есть и сделать это не очень страшно вот значит так вопрос в части зубы был некоторое время Сейчас посмотрим так вы вопрос Лучше
(1:25:29) перебивайте похоже на Ю и Да ну это я прохожу когда говорили что он отличается очень сильно И что одинаковые да да так эти все виды они на этих Шах же построены точно так же на самом деле лучше это здесь ничего прям какого-то там прям супер других алгоритмов нет здесь по сути просто комбинация большого количества всего что было до этого сделано вот кстати говоря о развитии до блокчейна Почему раньше так как бы его не было Да потому что у вас не было компов которые Может взять и тысячи электронных подписей проверить Это
(1:26:14) Какая операция там на Разбери пай короче замучаетесь подписывать транзакцию точнее на чем-то прям совсем мелком не знаю там на орудины например сделать подпись транзакция очень сложно потому что огромная бедность очень мощные вычисления компы не доросли как бы до вот этих мощностей блокчейн и по сути были невозможно вот они сейчас стали возможно потому что чем отличается блокчейн-нода она с точки зрения софта это по сути как mongo не знаю как mongo как бы такая которая крутится которая просто с другими мозгами соединена через спирту
(1:26:51) Пир и при этом это mongo которая живет очень много процессора потому что ей постоянно криптографические штуки делать и надо вычислять проверять вот эти вот мертвых доказательства проверять электронные подписи все время работает с числами огромными битности поэтому все блокчейн ноды они потребляют процессов прямо изо всех сил Так зачем при отправке транзакции мы указываем хешбблока если Блок из транзакции собирает вреда Нет мы при отправке транзакции не указываем хешблока и как бы непонятно как бы Хеш какого блока мы должны Как бы
(1:27:29) указать Вот потому что во-первых как бы нас еще блок не включили мы можем на опционально указать типа хочу как бы транзакцию после этого блока как бы но транзакциях блока нет никакого Там просто написано типа вот там есть я хочу увеличить счётчик своих транзакций вот так на это ответил Поехали дальше так у нас 1328 так у всех короче голова закипит поэтому предлагаю объявить перерыв Давайте на 15 минут сегодня 13:30 13:45 продолжим Сколько времени лекция планируется вообще все эти лекции планируется по две пары здоровый
(1:44:13) так можно вопрос Да Да А вот по поводу того что Эфир пришел а как-то технически происходит Ну то есть выходит новая версия протокола на нодах же имплантации старым продолжать работать собственно сейчас как раз и буду рассказывать соответственно как раз про тему как они обновляются чтобы хардфорки и как бы все это вообще как бы Может развалиться опять же смотрите вот у нас опять как бы наша Вот лучше как бы валидаторов значит кто-то из них там предлагает как бы блоки они уже там достроили как бы цепочку до определенного момента там
(1:44:54) кто-то как бы раньше кто-то позже И в этот момент происходит переход протокола на другую версию то есть блоки которые до этого были валидные 49 50 они либо перестают быть валиными либо происходит точнее грубо говоря прям технически если посмотреть прям в код как бы нот то единственный способ нормально сделать блокчейн Ну смотрите например изменился формат какой-нибудь транзакции Да И вот эти вот как бы блоки они у нас уже стали новенькие Ну то есть если все совсем согласны То есть это прям такой добрый как бы добрый хардфорк То есть все
(1:45:38) просто как бы нашли не знаю могу какую-то там не знаю со всей исправили то здесь как бы там с первой версии перешли на вторую версию и теперь блоки они изменили формат то в коде ноги Там написано что типа такого если типа высота блока там меньше там 49 2341 то типа валидировать валидейт первым способом как бы если как бы там больше то как бы валидировать вторым способом то есть по сути прям добавляется такие вот костыли некрасивые вот конечно Там типа что это до такого блока как бы мы вот так вот валидировали а до такого-то блока стали
(1:46:23) таким образом по-другому нельзя потому что вам нужна проигрываемость цепочки с нулевого блока то есть ваша как бы нода должна взять код как бы за процессе все блоки А ведь Когда у вас включилась вот этот V2 Да как бы версия у вас вы один то как бы они стали не валидные то есть их уже как бы по-прежнему нельзя проверять нельзя столевого блока поэтому внутри как бы коды надо находится прям вот такие вот прям конструкция это можно даже в исходник по сути можете увидеть например переход пруфов стейк она пруфов стейк
(1:46:59) выглядел таким образом там было написано если параметр который По моему дефикульте это Ну то есть там какая-то сложность в общем в каком-то из блоков должно было случиться как бы что сработает как бы вот это вот Триггер и если она станет там меньше какого-то значения там или больше и так далее То как бы уже начинается как бы рухнулся начинается валидация пруфов стоит до этого Мы считали у блоков красивых ошибок намайнены майнерами начиная с версии 2 как бы в эфире начали считать подписи валидаторов которые там предлагают эти
(1:47:41) блоки соответственно там и ставят на них аттестуют чужие блоки То есть это делается Вот как раз вот таким вот образом я да еще раз как бы да как бы акцент что код который валидировал предыдущую штуку он никуда не девается Он нам по-прежнему нужен потому что нам нужен вот этот кусок как бы блокчейна точно также с нуля накатывать и поэтому хардфорки вот то что называется либо хардфорк сети они выглядят Так что у кого-то как бы здесь появляется как бы софт версии 2 А кто-то еще остается как бы на сорте версии 1
(1:48:21) и тут уже зависит собственно от логики самого от логики самого хардфорка то есть что как бы произойдет Будут ли вы один считать валидными блоки В2 как бы Если да то вы один как бы продолжает его принимать блоки В2 вот там не знаю там до сих пор пока не обновится сов Если нет то они просто как бы их не видят эти блоки и производит свои и производят свои собственные блоки версии V1 там же тоже наверное как бы есть продюсеры блоков и у них появляется своя собственная цепочка Вот то есть это тогда вот эта штука отпочковывается
(1:49:06) история которая была описана с этериум и эфириум Классик она выглядела следующим образом там в определенном блоке вот здесь вот был там совершен Хак большой что тащили там сколько там десятка миллионов долларов и начиная с этого блока команда эфира она сказала как бы мы соответственно выпилим адреса этого хакера То есть просто добавим типа Костыль что начиная с такого-то блока вот это вот баланс этого хакера равен Ну я утрирую короче там каким способом они мотивировали сделать так как будто бы его и не было и попросили как бы всех майнеров эфира
(1:49:51) как бы обновить этот софт и мои Обновили из них большинство как бы Обновила этот софт и конечно пошла как бы пошла цепочка эфира значит работ а другая часть которая назвали себя эфириум классика не сказали нет мы ничего мы вот костыли впиливать не будем с хаком типа кот из лоу типа и взломали так взломали как бы все как бы мы будем как бы придерживаться не будем впиливать и понятно что у тех которые перешли как бы те которые были и т.
(1:50:30) х для них как бы вот блок эти си как бы следующий он для них не валидный потому что в нем как бы есть вот этот адрес То есть он для вот этого как бы для эфира инвалидные поэтому майнеры как бы все они по сути и начали строить свою собственную цепочку Вот это значит к вопросу Понятно понять стала говорить Что такое хардфорк Ну смотрите Ну на самом деле Ну ничего как бы сильно сложного Если вы просто думаете как бы о ноги блокчейна как а программе которая типа валидирует блок вот понравился она берет мне нравится она не берет и тут уже дальше как бы
(1:51:20) зависит от того как бы как она изменилась То есть она будет она принимать от других майнеров со старой версии как бы их блоки будет или не будет Насколько этот хардфорк вот здесь нормально там грамотно запрограммирован То есть это рассматривать нужно именно с точки зрения не знаю там архитектуре что я не знаю базы данных которые меняются например схема данных предположил у вас там не знаю там 10 серверов баз данных они работают как бы с одной и той же базы данных вы в этой базе данных меняете там не знаю название
(1:51:57) какой-нибудь колонки и у вас те кто софт не Обновили как бы они падают как бы те кто Обновили как бы они они соответственно не падают те которые упали можно сказать они свой строят как бы хардфорк этой базы в которой конечно ничего не работает но те как бы тем не менее все равно как бы хардфорк вот из Ну соответственно как раз вот после обновления [музыка] чуть-чуть посмотрели с вами происходит по сути можно описать как бы как происходит атаки на блокчейна вот ну и смысле что означает что блокчейн как бы перестал работать смотрите Представьте
(1:52:43) что у меня есть блок вот я здесь как бы у всех по два блока И вот я предлагаю как бы свою вот третий блок и в нем внутри есть определенные транзакция и эта транзакция предположим заставляет Ну давайте просто для примера для примера короче Пускай она берет и записывает куда-нибудь там вот в наш вот этот стоит ДБ стоит табличка короче которая там типа у Васи там не знаю 100 эфира Она записывает Она дает вас и как бы рандомное число эфира не знаю там плюс Короче говоря 03 Или там или 04 Ну просто как бы предположим
(1:53:32) такая транзакция существует и возможно как бы блокчейне что произойдет соответственно этот блок он как бы разойдется по другим валидаторам они его скачают Они возьмут эту транзакцию выполнят вот этот Рандом и запишут каждый запишет свою стоит разные значения одному как бы Вася как бы у него станет там 10 там один 103 этого 10 6 Там и так далее У всех работают по-разному Затем что они будут сделать что они будут делать они после этого Когда начнут надстраивать над этим блоком как бы следующий им нужно будет из
(1:54:18) предыдущего взять State Root то есть состояние базы данных она у всех разное она у всех разное и получается как бы что как бы и Хеш вот этого блока уже другой то есть надо как бы настраивать другим и получится такая ситуация что все как бы начнут строить свой собственный блокчейн свою собственную версию блокчейна это вот такую там еще одно Если произойдет еще одна транзакция когда он опять раздуется на 2 там на 10 лет и так далее и так далее но выглядит это будет очень просто Просто становится производство блоков
(1:55:01) или как бы там не знаю там майнер насчет майнить блоки сам себя как бы один на самом деле [музыка] не потянет в одиночку Вот и поэтому как бы блокчейн становится из этого вытекает самое главное такое основное просто требование в процессе будут транзакции блокчейна транзакции в блокчейнах они процессы строго детерминирована значит что это значит компьютер санях строго детерминировано Это означает что на одном и том же импульте ваша функция которая не знаю ваша программа грубо говоря исполняется порождает один и только один output в любом на любой
(1:55:54) архитектуре на любом процессоре в любое время там дня и ночи то есть Неважно как бы помимо инкутов Давайте соответственно если мы говорим о блокчейне да то там еще есть предыдущая данный блокчейна блокчейн Data Ну то есть там есть то как бы то что мы можем взять там из предыдущих блоков внутри этой программы использовать давайте так просто смотрите например Input n квадрат короче Out вот этот детерминированная функция хорошо А если например вот такая вот там не знаю там 10 плюс текущее время нет Можно вопрос Да нет как раз здесь кстати говоря в
(1:56:57) смарт-контрактах есть отдельная как бы Pure это значит она еще не обращается как бы никуда То есть она не читает никаких внешних данных как бы а просто там не знаю там работает то есть Pure функции эта функция которая работает только со своими аргументами вот только с тем что вот здесь находится все больше она ничего не делает вот да да это Смарт контрактов у него прям есть модификатор который называется Pure это там если вы считаете не знаю квадратный корень или там не знаю там математику какую-то А если она лезет
(1:57:31) соответственно куда там блокчейн Ну например на предыдущие данные которые были записаны в блокчейне Ну например ей нужно сделать например баланс баланс Вася это опять такая функция будет детерминированная Ну смотри такая функция будет еще раз будет ли функция которая увеличивает баланс Васи на 5 Ну да должна быть но при этом она не чистится потому что она доходит Ну она действительно будет детерминированная потому что у нее есть уже как бы до этого как бы вот этот состояние четко зафиксировано То есть сколько там у вас
(1:58:19) там на балансе она работать будет всегда одним и тем и тем же способом И самое главное она будет порождать тот же самый вот этот стоит div вот так вот она будет порождать грубо говоря одни и тот же набор изменений вот этих вот ключей значений то есть там у Васи как бы будет там плюс 5 как бы там вызываешь комиссия [музыка] так сейчас пропал то есть Надеюсь восстановилась Вот то есть как бы будет порождать один и тот же одной и то же изменение в стейте то есть в точности баланс увеличится на 5 там комиссии снимут и так далее но все это на
(1:59:04) основании я еще раз как бы подчеркиваю на основании данных которые есть блокчейне то есть никаких там внешних обращений быть не может в этих транзакциях Ну и кстати текущее время Ну то есть это действительно не детерминированная история но когда майнер собирает блок и вставляет в него транзакцию которая берет как бы текущее время он же вставляет сюда таймс тем поэтому эта штука в принципе годится то есть текущее время Разумеется в контрактах есть но просто для всех транзакций в одном блоке она совершенно одинаковое
(1:59:42) сюда берется время берется время всегда берется время и все это как бы время блока никакого текущего времени там нет его получить нельзя вот это все из-за требования детерминизма Какие еще функции которые детерминизм нарушают можете вспомнить который на разных компах дадут разные значения любые которые зависят от рандома Ну хотя там если сидеть одинаковые тоже не факт но совершенно верно и здесь роддом вычисление всплывающей точкой могут зависеть системы вот прекрасное замечание и крайне важно Вот такое число на разных процессорах
(2:00:35) вам породит как бы разные бинарные образы то есть с разной точности будут проводиться вычисления и по хорошему если мы будем прямо добавлять базу данных напрямую значение вычисленные на процессорах разных архитектур они будут бинарно разные и нам это не годится и поэтому блокчейнах операций сплавающей точкой нативных которые берут результаты напрямую его как бы куда-то пихают как бы их нету блокчейнах по сути вообще нету как бы никакого операции с плавающей точкой на самом деле конечно же ну то есть понятно что как бы как это как бы нет
(2:01:21) когда как бы они есть он в кошельке Там с точки как бы так далее но на самом деле во первых есть либо которые позволяют делать вычисление сплавающей точкой как бы как раз детерминированном варианте Вот Но блокчейнах все представляется целыми числами числами буквально биткоин или эфир как бы вы можете прям сразу готовиться у вас будут просто 32 байта там или там 256 бит и вот вот в этих вот слотиках короче хранится все Чем занимается блокчейны все численные данные там проценты доли балансы оно все как бы вот таком виде там типа даже там
(2:02:11) ювенту короче там без знаковое целое длиной 256 Это нативный тип данных для в общем-то для всех блокчейнов 256 бит как бы размер он связан тоже с одной как бы важные вещи то есть потому что все вот эти вот наша всякая база данных стоит с ключами там не знаю с эфиром и так далее так далее когда туда начинаешь добавлять дополнительные данные различные структуры там какие-то там еще что-то структурированные данные которые привязаны к адресу владельца смарт-контракт с ними работает то все эти данные адресуются ох ишам
(2:03:02) то есть грубо говоря хранилище грубо говоря контрактов она организовано тоже Какие valler и все значения как бы которые адресуются они все адресуются по шу если мы привыкли как бы что у нас в наших компьютерах там в обычных Да у нас есть там указатель Хищник который ссылается на область там в памяти и там у нас там сколько-то бит как бы находится и вот этот указатель как бы он такой-то какой бы там линейный Ну такой там 12 потом там не знаю записали 8 байт короче он стал 20 Там и так далее То есть то в блокчейнах
(2:03:45) специально как раз сделано адресация вот это вот все вот эти ссылки они являются и сделано это опять же за требования детерминизма чтобы любая логика которая пошла Там поменяла вот эту переменную поменяла вот эту переменную поменяла вот это вот переменную то есть сам код чтобы он тоже исполнялся полностью детермиром Чтобы даже как бы в оперативной памяти вот эти изменения они были они были детерминированы там собственные перемены сохраняются в это какие вы либо сданных и так далее Вот то есть Поэтому отсюда как раз выходит вот это вот
(2:04:30) из детерминизма выходит истории Как бы про то что все данные блокчейнах они целочисленные все операции как бы целочисленные все остальное делается при помощи целочисленных операций а там не знаю там приходит там блокчейны мы сделали как бы крутой блокчейн там со смарт контрактами там в транзакции можно там поместить там супер там не знаю там что хочешь как бы написать а вот здесь написать все что хочешь у нас контракт очень простые на JavaScript пишется вот ну и теперь Представьте Короче говоря у вас здесь как бы на джастике Да
(2:05:08) вы можете Вы на самом деле может спокойно технически запрограммировать что у вас там не знаю там ваш валидатор взял транзакцию здесь в каждой из них там скриптовый повод взял как бы выполнил спиртовый код накатил там что-то даже сделал Но детерминизма вы здесь не получится то есть у вас будет реально согласование то что на одном компьютере он вам одно считает как бы на другом компьютере тоже транзакции сработает по-другому на одном было мало памяти он там я не знаю там много там выделялась скрипел выполнялся 10 секунд
(2:05:44) транзакция здесь она выполнялась там за нуля одну секунды и так далее все вот это вот блокчейнах очень жесткая регламентировано под транзакции всегда стоит какая-то виртуальная машина которая похожа на JW то есть на Джем которая вот эти вот транзакции исполняют я вам сейчас рисую вот это то что Вася как бы Петя там не знаю там 10 как бы эфира переправы переправляет Но мы-то конечно будем заниматься контрактами про которые будут очень подробно там сильно подробнее следующей лекция вы уже можете как бы заранее готовиться что здесь конечно не
(2:06:25) 10 эфира передается а на самом деле просто вызывается под причем какой-то может быть достаточно значимый под какой-то серьезный который там с одного баланса минусуют на другой давай кому-то начислит проценты заплатит короче там не знаю Там фитомайнеру и так далее так далее может сделать там 10 раз как бы и там сложных различных комбинациях математиков читать какую-то Вот то есть этот ну то есть серьезный блокчейна который со смарт-контрактами они про перекладывание как бы цифера вот ну и могу сказать да что блокчейн-разработка это ну я уже говорил
(2:07:08) да что биткоина там мало Вот потому что эфиры там много потому что по факту солидете Точнее не солить а именно то что у него под капотом evm эфириум Виртуал машин которые исполняет как раз код который там пилится на солите он уже он стал таким стандартом в индустрии который реализуется во всех крупных блокчейнах то есть есть там блокчейн только до который работает вот прям с точностью вот так называется с ним работаете точно так же как с эфиром вот есть там не знаю сколько до там в салоне короче есть не он проекты которые прокси который тоже
(2:07:54) делает работу как cvm и здесь как бы очень крутая и культура разработки много bestractice то есть здесь уже как бы сложилось за много лет очень большое как бы комьюнити разработчиков во всяких инструментов и в общем очень очень приятно разрабатывать На самом деле очень много все сделано Вот это значит то что касается детерминизма исполнения поэтому Когда вам говорят как бы у нас там блокчейне смарт-контракты на питоне вот на самом деле надо интересоваться скорее как бы какая виртуальная машина исполняет потому что как бы действительно нужен
(2:08:38) жесткий детерминизм Еще одна история как бы блокчейнах крайне важный для понимания процессинга транзакций это ограничение на исполнение транзакций Значит мы уже так подходим как бы в этой лекции уже потихонечку завершение смотрите Я майнер у меня есть требования по консенсусу что я должен там произвести там следующий блок там в течение Короче не знаю там 10 следующих секунд вот ну просто там в разных консенсах там разных там валидатором назначается временные слоты ты типа с нулевой секунды до 10 произведи блок ты там типа
(2:09:19) с 11 20 Всего нас там 6 там каждую минуту в одном виде консенсов биткоине Короче говоря надо Там типа чем быстрее тем лучше и так далее теперь Представьте с этими моими волшебными транзакциями которые сейчас вам Расписал то есть которые Внутри там целую там типа пачку кода исполняет там делает пересылает вот если вот транзакции будет наш любимый wild.
(2:09:51) ru Ну то есть какой-то программный код который зациклился или просто который пожирает как бы кучу ресурсов чем в этом случае делать соответственно майнер как его исполняет вот это вот программу начинает как бы ее крутить попадает бесконечный цикл бесконечно висит все как бы Вся сеть стала как бы все кто хотят как бы произвести этот блок они все как бы зависли понятно что на транзакции должно быть применено ограничение какое-то если прям совсем по-другому Ну давайте короче сделаем что она должна исполняться не дольше чем 0 там 01
(2:10:30) а могу сказать что на низком уровне вот эти вот ограничения типа по времени исполнения программы они очень хреново реализуются на самом деле очень неудобно как бы есть очень много как бы всяких вещей которые как бы в точности чтобы вот этому соответствовать и не попасть какую атаку xpation вот этой штуки это нереально Еще хотелось бы вообще не делают на одной машине успела не успела нет Если блок был принят вот ограничил по времени вот я потихонечко к этому иду Как оказалось на самом деле как бы подход по времени он
(2:11:17) не особо как бы хорош во первых Вот трудно затронуть Вот во-вторых вы тоже компьютер это разные скорости и скорости разные и поэтому отдал компьютер это типа 001 А у другого 01 и вообще по хорошему Ты ведь майнер как бы процессе для него представьте вот у этой транзакции я буду рисовать трассу Представьте что каждый точечка это сэмблерная инструкция машины инструкция которая исполняет процессор А у этого трасса Вот такая вот коротенькая а это вообще эфир переводит там типа два баланса обновил как бы а и по-хорошему как бы майнеру бы надо
(2:11:59) бы брать деньги за каждый вот из вот этих вот точечек то есть как бы кто написал большую программу как бы с того много берем денег Кто написал что-то коротенькое как бы то берем берем меньше денег вот и соответственно из этого родилась концепция эфирных газа мы тоже про нее будем там подробно говорить вот там прям очень часто будем к этой штуке обращаться по сути транзакция в эфире это набор обходов то есть набор прям инструкции машинных сложил там чем сложить запушить нас так запушить нас так перемножить если как бы получился 0
(2:12:48) там типа и то сделать там Джамп Но кто из вас не знаю там микроконтроллеры продал вспоминать как бы здесь Да смарт-контракты в общем-то виртуальная машина они так работают evm это по сути такой микроконтроллер как бы стандартный с памятью со счетчиком команд короче со стеком там с выделениями памяти и так далее так далее Вот и соответственно идея как бы газа она была в том чтобы просто присвоить каждый из этих инструкций свою цену то есть там от стоит там не знаю три пуш стоит 2 умножение стоит 10 там еще там
(2:13:30) что-нибудь запись в Киеве база данных нового значения что у вас стало 8 стоит там 20 тысяч 20 тысяч попугаев или там Какого года то есть это условные очки трудоемкости исполнения данной инструкции какие-то попроще Да там арифметика загнал два регистра как бы выполнил Все здорово как бы пуш на стояк легковесная после операции с ней должны быть дешевые А и В М это стек based основанный на стейке виртуальная машина запись в сторону что-то По сути запись на диск самый тяжелый самый медленный Кошмарная операция как бы она стоит
(2:14:11) прямо дофига Ну и так далее То есть мы еще все эти мы цены как бы эти обсудим и как это все оптимизируется обсудим но как бы что я хочу сказать что блокчейнах оплачивается каждый квант буквально исполнение которые потратили потратили Там майнера валидаторы никто никому не доверяет никто никому бесплатно ничего не делает то есть никаких бесплатных транзакций И вообще не существует блокчейна там любит там не знаю корпоративные блокчейны как бы рассказываете приходить короче говорить что у нас там бесплатные транзакция бесплатный транзакции Это
(2:14:55) означает что вы можете бесплатно набить блок короче всяким трешем и по сути заспамить просто весь блокчейн вот там не знаю там приходит там проект у нас бесплатные транзакции Да ладно Ну вот у нас человек типа заморозил как бы токены там не знаю там свои как бы на балансе у него теперь там 0 там 10 тысяч заморозил и у него теперь бесплатные транзакции но отлично короче вот у нас два чувака заморозили 10 тысяч по 10 тысяч и друг другу кидают как бы транзакции пожалуйста как бы за бесплатно все блоки забиты как бы
(2:15:34) мусором соответственно блокчейне работает все оплачивается Обязательно как бы То есть майнер были валидатор бесплатно вычислительные ресурсы не предоставляет при этом как бы диск дороже процессор там память Там и так далее есть и другие модели оценки ресурсов и чтобы обратить на них внимание ваш но это уже немножко из области высоконагруженных приложений да у вас когда какой-то работает там на компьютере там демон не знаю ваш веб-сервер там базы данных вдруг она начала по производительности всасывать вы значит бежите в мониторинг начинаете
(2:16:14) значит смотреть что на самом деле как бы происходит и по сути Вы должны всегда помнить о четырех ресурсов первые ресурсы это процессор вы прибегаете на компьютер вы смотрите у вас там типа какой-нибудь Загрузка процессора выросла стоит там типа сто процентов вот случилась это вчера как бы и вы думаете что произошло на самом деле там кто-то выкатил обновление которое не знаю там раз секунду там тысячу раз секунду проверяет электронную подпись например или там шифрование какой-нибудь или математические операции там работа с
(2:16:51) индексами базы данных То есть у вас процессор Вот вы начинаете разбираться то есть это значит первая история То есть как заспавить при помощи процессора там не знаю блокчейн или распределенную систему заставить как бы в своем контракте вот здесь вот выполнять какую-то сложную математику Ну то есть что-то там прям то что будет поедать как бы процессор серьезно вот эти возведения там степени там перемножения больших больших чисел и так далее следующий ресурс это у нас Давайте это тоже всем из вас наверное известно
(2:17:31) кто работал свое приложение вы приходите на работу менеджер говорит у нас все как бы тормозит вы смотрите у вас как бы все вы добрались как бы у вас память утекла как бы все вышли там машина ушла в свап все упала как бы все плохо значит Ну тоже как бы там Выксе обновление там не знаю которые там в памяти разворачивает массив из миллиона элементов и таких-то и в процессах таких массивов для себя соответственно внутри вот этого кода как бы То есть можно сделать цикл который как бы постоянно пишет в память занимает
(2:18:05) занимает оперативку занимает занимает там и выделяет его немедленное количество оперативки как бы и соответственно пожирает память за это надо тоже считать деньги следующее штука у нас storage Да это ну процессоре Input output То есть общение с внешними устройствами и тоже высокое приложениях увидите что у меня там все диск встал Ну началось немереное количество записей чтений и все как бы диск не успевает тормозит все остальную систему с остальными ждут там процессор курит память курит как бы диск за всех надувается То есть за него обязательно
(2:18:48) платите в блокчейне это самый дорогой ресурс то есть сторож Почему Потому что то что Вы сохранили как бы в блокчейне она тиражируется на тысячи но все это все теперь весь мир как бы будет ваши эти Данные постоянно копировать постоянно дублировать хранить как бы поэтому стоит крайне дорого но четвертый ресурс про который часто забывают Нетворк то есть сеть у вас все как бы сервисом Хорошо как бы только на сетевом интерфейсе как бы немереное количество пакетов вас там dedos например там напал кто-то на ваш сайт или там качает кто-то
(2:19:24) там с вас как бы там немерено там не знаю фоточек каких-нибудь это в общем-то тоже один из ресурсов и для блокчейна как бы Нетворк это по сути размер транзакции то есть входные данные которые здесь используются которые были в транзакции чтобы как бы нельзя было там такую транзакцию огромную посылать или там миллионы транзакций заспами ноду чтобы она их не получал за все это как бы надо брать деньги и соответственно концепции Газа Все вот эти вот инструкция они взвешены по сути по цене из дополнительными всякими плюшками типа
(2:20:07) что если ты выделяешь Память то тебе придется заплатить за каждый 3 гигабайтный Слот например за каждый новый как бы 32 кислот знаете похоже на страничную организацию памяти в операционных системах вот этот выделение слотов или если кто читал Как работает всякие малыки все плюс плюс выделение памяти такими как бы чанками здесь тоже штука как бы достаточно похоже близко к этому Вот ну и соответственно там память понятно там Stories тоже как бы вот этими кусочками своими здесь оценивается деньгами вот сеть в общем-то тоже
(2:20:49) вот сеть этого оценивается размер как бы данных которые пришли Вот я правильно понимаю что Смарт контракте тогда в качестве транзакции Исходный код отправляется которые мы не исполнит Ну на самом деле смарт-контракт бы код заранее размещается в блокчейне у него тоже как бы появляется адрес а как бы пользователь отправляет вызов функции этого контракта хочу вызвать функцию в этом контракте такую с такими параметрами вот как другие ноды валидируют что майнер правильно его исполнил они точно так же каждое надо его исполнять каждый
(2:21:32) нода его исполняет именно так то есть каждая ноды исполняет его вот эту транзакцию Именно поэтому смарт-контракта они очень большие они очень оптимизированные как бы там нет никаких там типа больших циклов там нет как бы ничего что работало то есть там вся логика она вывернута как бы такая как бы на пользователей там все действия делают пользователя Вот то есть именно так как бы то есть каждый транзакция То есть то что я говорил как бы то что с Васе списали 10 эфира как бы опять и как бы добавили 10 эфира на самом деле это же Внутри тоже программа
(2:22:15) Это программа которая сначала правеет что у Васи баланс больше 10 и упадет если баланс меньше затем как бы она должна записать в storage затем она должна как бы записать Петя затем там и закончить работу обновив соответственно там стоит это уже такая нехилая работа Вот и собственно детали как раз и предложил он говорит Давайте вот эту штуку Пускай программисты пишет вы давайте то что мы говорим про газ про оценки операции это чтобы оценить Сколько майнеров получат за выполнение Да да Именно Ну то есть валидаторы
(2:23:01) просто так будет исполнять этот код или как Нет нет но нет это газ это просто подход к оценке Да теперь мы грубо говоря знаем У нас есть какой-то код вот этот функция Да там большой контракт мы вызываем в своей транзакции там не знаю там Вася обращается к контракту и вызывает функцию вызывает свою кладет там электронную подпись отправляет ее эта функция отправляется в Контракт начинает исполняться вот при этом как бы тратится газ есть какой-то верхний лимит То есть если как бы Вася упрет там 10 миллионов газа
(2:23:45) он его там потратят то транзакция не будет выполнена Вот она упадет с ошибкой Out Of gas и при этом пока она исполняется здесь ведется счетчик плюс 3 плюс 2 плюс 10 плюс 20 тысяч и в результате как бы у него получается количество газа который он потратил на Вот это исполнение этой транзакции вот столько с него как бы спешит майнер просто в эфире сделан Так что комиссия она называется газ прайс вот это как бы следующее как бы история то что каждая единичка газа стоит сколько-то эфира и вы эту цену ставите сами
(2:24:28) Говорите Я хочу вызвать транзакцию которая потратит 21 тысячу газа и цена газа там не знаю там 0 там типа 000 там один эфира и майнеры исполняет умножает 21 год на это и столько вам придется заплатить майнеры заплатим а потом другие Но даже им нужно проверить чтобы они тоже будут исполнять они вдоль Да конечно нет они просто валидируют они просто до перепроверяют они точно также Да накатают Каждую из транзакции исполняет по сути все смарт-контракты здесь так не очень понятно концепция нет Вот Вы получили блок вам нужно
(2:25:19) проверить вот у вас есть транзакция которую вы просто выполняете вот вы понимаете как бы что этот код потратил 21 тысячу Газа что пользователь в транзакции указал типа 001 как бы эфира посчитали там комиссию ваша комиссия как бы за этот транзакцию там составил там типа 0 там что-то там 0021 эфира и все ее приплюсовали как бы к награде моей майнеру который блок призвал пошли следующие транзакцию следующий раз тоже выполняет определенный код вы его выполняете проверяете то что как бы действительно было столько газа
(2:25:59) потрачено сколько ему и у майнера как бы берете ту цену как бы транзакции при нажатия получаете комиссию второй транзакции Вот так вот все как бы друг друга перепроверяют если статический анализаторы кода которые могут газ посчитать Да конечно мог Ну конечно есть и газ как бы подсчитывается достаточно Там просто там в куче как бы там еды как бы то есть здесь единство что важно как бы что вы не всегда можете предсказать количество газа заранее не зная состояние контракта потому что у вас здесь же программа как бы она может
(2:26:49) пойти как бы в обход этой ветки в обход когда может пойти если например какая-то другая транзакция в том же самом контракт что-то изменило То есть как бы здесь и не очень просто как будто с одной стороны как бы просто с другой стороны не очень-то просто То есть есть какое-то логических веток программы по количество путей как бы она в общем-то может пойти вот поэтому оценка газа но Прогресс вы не волнуется Мы прям на самом деле очень глубоко как бы у него копнем как бы их цены как все эта штука как бы считается и от чего зависит
(2:27:29) Вот Но что нам важно как бы на этой лекции это то что любая Это любая транзакция в блокчейне оплачивается и оплачивается за ее именно сложность исполнения То есть просто как бы деньги которые доваливаются на транзакцию сверху типа в качестве бонуса как бы это только бонус Вот но как бы всю базовые штуки обязаны быть оплачены иначе иначе сеть будет просто заспамлена так вопрос каждый раз каждый раз выплачивается майнеру который сделал смарт-контракт нет майнер не делает смарт-контракт Смарт контракт делается пользователями
(2:28:20) майнер исполняет код этого смарт-контракта и берет деньги за газ потраченный на Вот это исполнение вот так вот то есть майнер исполняет чужую программу и при этом как бы подсчитывает сколько он потратил на этом процессоры памяти все это дело суммирует получает как бы вот эти вот условные единицы типа газ умножает на цену которую ему дал пользователь сколько я готов заплатить за газ и получать собственное значение вот это вот комиссия то есть смотрите у нас есть один смарт-контракт например его вызывает 10 пользователей
(2:29:00) например какой-нибудь смарт-контракт Короче говоря у него есть какая-то функция Вот это там F1 которая чем-нибудь там делает там кому-нибудь там деньги причисляет что им забирает какой-нибудь первый пользователь вызывает эту функцию она исполняется он там насчитал там не знаю там 40 тысяч газа и сказал хочу платить как бы там 01 эфира за каждый газ Ну и как бы заплатил соответственно такой комиссию второй пользователь тоже вызывает эту функцию F1 вот он тоже потратил 140 40 газа но хочется платить за него меньше там типа 0 там типа 0,5 эфира как
(2:29:47) бы я хочу заплатить за газ и вот этот произведение является как бы их по сути как бы комиссиями и майнер будет выбирать между этими двумя как бы транзакциями и там наверное решит как бы выполнить сначала вот этого чувака Потому что от него больше получится потом от этого там есть как бы еще там предварительная оценка газа и так далее но я повторяю что это сильно зависит от порядка транзакции в блоке потому что может быть что случится типа сначала пришел первый пользователь изменил здесь какой-нибудь переменную
(2:30:21) и из-за этой перемены второй пользователь когда сюда пришел но он как бы посмотрел сюда на эту переменную как бы из-за неё как бы ему пришлось пойти как бы ну исполнять другую ветку кода А здесь например получилось не 40 газа там а 80 кило Газа Вот то есть здесь все вот на усмотрение как бы программистов смарт-контракты размещают пользователи то есть яма я пишу Smart контракт я его диплою в эфир вот мы прямо это будем делать много раз и он начинает работать пользователи могут контракт соответственно слать транзакция майнеры
(2:31:00) берут с них деньги за исполнение кода вот этого смарт-контракта ответил Ага помещается вопрос можно дальше посмотрим так но тем не менее награду за предложенный блок выдают только валидатору предложившим эти этот блок А валидатор кто перепроверять ничего не получает Да ничего не получают то есть награды за блок отправляется валидатору просто как бы в консенсах там сделано так что там есть такое как бы расписание как бы работы валидаторов так называемые там скидил зависит По разному как бы алгоритму и например там первый
(2:31:45) валидатор получил здесь награду за блох следующем слатья как бы второй получит да да При этом если кто-то из них косячит там пропустил свой Слот да то эта информация блокчейне Она остается Ну то есть мы можем по предыдущим блоком понять типа что вот здесь вот он должен был работать как бы кто-то на самом деле кто-то из этой группы то здесь конечно группы там валидаторов у нас же все византин фол толеранс как бы то есть мы не можем как бы оставить как бы все эти рабочие Он пропустил как бы его наказывает потом там деньгами там
(2:32:21) забирает у него там часть там не знаю там стейка там еще что-то и так далее То есть это мы будем на конце обсуждать там довольно интересно вот так туда как бы награду завод получает только тот кто его произвел остальные перепроверяют принципе это тоже выгодно потому что если нет не будут делать сеть пойдет в разнос то они сами не смогут производить блоки главная идея как бы вот этого пруфов стейк она была выглядела такая следующим образом proof of stake Что кому выгоднее всего в блокчейне чтобы он был честным что в нем не было хаков как
(2:33:04) бы чтобы это все блоки правильно процессоре в процессе выгоднее всего эта тема У кого больше всего токенов этого блокчейна вот у кого как бы больше всего крипты этого блокчейна Они сильнее всего пострадают как бы если в нем будут найдены какие-то проблемы То есть они самые серьезные А поэтому как бы раз как бы они от этого сильнее пострадают им можно просто доверить вот это вот создание блоков лидация Там и так далее он об этом вы в эфире там заморозили 32 эфира Сколько там сейчас не знаю под 50 тысяч долларов заморозили как бы включили
(2:33:40) компьютеры следить чтобы он как бы никогда вас не вырубался был стабильно в нужное время как бы он там производил блоки валидировал остальные блоки и он получает награду кстати Подождите а вы написали награду за блок награду за блок Да получает как бы получает валидатор Да этого блока а вторые которые ставят аттестации в группу stake они тоже зарабатывают на этом Копеечка падает на самом деле там очень прикольные модели Такие интересные как бы сбалансированный вам интересны наверное самый такой по мне продуманные
(2:34:34) документам интересным можно будет читать я вам скину там когда будем заниматься вообще то что сейчас в эфире 20 из которых выбираются под группы которые там определенные сладкой времени должны печатать кодировать тоже очень красивая схема как бы очень грамотно они долго делали вот понятно почему долго делали остальные это стартовали с proof of stake с голым Как бы блокчейном как бы у эфира на горбу Извините 200 миллиардов долларов и надо переехать бесшовно когда чтобы ни у кого ничего не сломалось Вот они это его
(2:35:15) что-то сделали за что большой Респект и вожу какой-то не крепкий неверный Код Да тоже такой как бы важный вопрос значит во-первых как бы смотрите любой Смарт контракт заканчивается двумя кстати говоря Именно поэтому говорил он не раз блокчейнских названий как бы название кошелек там или еще что-то смарт-контракт этот код назвали контрактом потому что в биткоине тоже как бы по тоже из машины конструкции он возвращает либо True либо false если True то как бы биткоины с данного адрес тратится как бы целиком то есть вычеркивается из киевери в Богдана
(2:36:05) Если false как бы то ничего не происходит смарт-контракты работают похожим же образом То есть если смарт-контракт закончил свое исполнение функция сделала OK то тогда вся запись стоит тебе как бы она фиксируется КАМиТ Ну то есть все что она здесь на меняла как бы там не все балансы там не знаю там Вася там плюс пейте Минус Там и так далее все это записалось и по итогам этой транзакции будет правдой сейчас стоит Root то есть стоит изменился А в случае риверта как в случае сq или как бы отката транзакции будет по сути ролл бэк
(2:36:45) то есть так как будто бы этот контракт никогда не вызывался то есть Никаких изменений в сторону же не будет но при этом смотрите мы ведь до этого риверта можем довольно долго идти да что там гоняли по циклу там проверяли кому-то там что-то пытались деньги записать Там и так далее а потом все как бы реверс отменилась как бы все какое-то условие не сработало но майнер потратил вычислительные ресурсы и поэтому в эфире и тоже во всех нормальных его блокчейнах за это придется тоже заплатить Здесь тоже есть газ и поэтому здесь в эфире
(2:37:22) платится даже за упавшие транзакции если не хватит на счету а тогда как бы ну майнеркой вы берет вашу трансу как бы он ее эмулирует накатывает ее на состояние как бы блока если видно что баланс меньше чем как бы газа и он просто ее это свидание я не я не возьму вот а он будет выполнять все пока будет хватать баланса или он сразу проверяет там же мы не знаем по веткам Вот как раз как раз вот это вот часть это как раз то чем отличаются разные имплементации нот эфира какие-то честно все накатывают какие-то делают там часть проверок
(2:38:07) предварительных какие-то опираются на предыдущие как бы транзакции в смарт-контракт понятно Да что вы описали такой можно сказать такой Вектор атаки То есть я держу маленькую маленькую копеечку у себя как бы манеру все время кидает как бы транзакцию которую тратит дофига газа Они ее на нее тратят ресурсы а потом типа просто включает блок получается что я их забросил Вот как раз именно в этом месте отличаются очень просто сколько у вас как бы Jump условный как бы Jump на какую-то там метку и потом здесь как бы пусто Но вот этот Jump он тоже он стоит
(2:38:59) газа там 5 газов Но это бы за него должна закончить выполняться она не закончит как долго он будет выполнять он будет пока как бы не будет достигнут Хард лимит Газа Хард лимит но имеется там какой-то там 10 10 миллионов газа То есть он сделает вам там сколько там 200 тысяч операций как бы и остановится с ошибкой закончится газ Вот так бы каждая операция будет стоить денег Ну да и ему придется когда прокрутить вот тут увы как бы ничего не попишу Я нет я так понимаю что как раз здесь то возможно много много как бы разных
(2:39:53) подходов вот можно оценить соответственно и стоимость функции заранее как бы примерно Вот и прикинуть как бы баланс отправляющего и сами программисты понимаете что можно как бы дело оптимизировать Типа если там совсем копье как бы то не проверять Если Примерно там на границе значение Вот Но это один из векторов атаки Вот так это значит что касается OK риверта детерминизма ожидания сигнализация но да наверное смотрите то есть вот этот слово сигнализация штука как бы довольно важная она используется я уже говорил про что в
(2:40:48) майнинге там по сути как бы блок А вот его закрыли вот этим красивым как бы хорошо я Глядя на этот верю что как бы на этот хэш было потрачено там электричество сколько там город потребляет за несколько дней там куча там травах чтобы просто найти вот красивый хэш и поэтому как бы я в принципе уже уверен что моя транзакция там она уже не будет откачена Ну может быть по яйцам какой-то конкуренты мои транзакции Ну все равно с большой вероятностью попадет и в этот блок А если прошло там типа сейчас считается в биткоине там теплом 6 блоков если прошло
(2:41:26) назад то все этот блок считается что все Прямо супер надежный все вот транзакции уже никогда не будет откачена Вот но опять же Это только вероятность то есть математическая А вот та которая детерминированная финальность которая пруфов стейках как используется там история такая что если блок является финализированным То есть он собрал вот эти больше двух третей аттестации от валидаторов он уже не откатывается Вообще никогда То есть просто никогда то есть Неважно какая там появится цепочка более тяжелая более еще там какая-то как
(2:42:03) бы то есть эта штука уже как бы она не откатывается никогда то есть после нее как бы блокчейн идет строго сюда и поэтому сигнализация штука важно с той точки зрения что вы гарантированно со стопроцентной вероятностью знаете что ваш транзакция включили в блок она уже не будет выпилены из блокчейна никогда вот и поэтому на пруфов стейк сетях там проще строить там не знаю там мосты которые там из разных блокчейнов активы там перекладывают так далее нужен обязательно этот факт типа что все вот в этой сети все железно прям сто процентов
(2:42:37) как бы не будет отката цепочки понятие финализации как бы тоже довольно таки важно еще что наверное такое из общих из общей истории Как бы там крипты Давайте да Сначала для приколы не знаю там покажу как вообще очень просто этим пользоваться У меня есть кошелек это по сути [музыка] расширения в браузере на самом деле Оно просто у меня есть тестовый эфир тестовая сеть вы в ней тоже кстати будете тоже много работать вот girly она называется их тут несколько такой игрушечный эфир который подняли разработчики Вы можете
(2:43:27) попросить как бы себе там тестовые эфиры там преград с ними вот это вот мой адрес Так выглядит обычно таких ликбезах показывает И вот так я отправляю крипту Не знаю адрес на адрес я думаю что все это вы можете миллионе туториалов найти отправить между моими счетами на другой тест отправлю какое-то количество там вот в этот момент смотрите моя транзакция сформирована здесь написано примерная плата за газ то есть вот столько я буду за нее заплачу как бы эфира сейчас я там подробнее можете побольше для для юзеров ладно Сейчас
(2:44:25) отправим и самой транзакции посмотрим вот момент когда я нажал подтвердить метамакс достал мой приватный ключ Поставил Поставил электронную подпись Вот она пошла транзакция она еще пентинг То есть она еще висит пул ее ничего не включили в блок то есть майнеры типа еще пока я только видит эту транзакцию но при этом смотрите но она стоит 21000 Газа Вот здесь как бы она гвоздя им прибита то что отправка эфира это просто Константа 21000 газа вот там вот вот это вот цена это сколько готов заплатить за газ газ прайс то есть сколько как бы мой
(2:45:13) кошелек поставил какую цену за один газ вот и она вот ее включили транзакции включили соответственно этот блок 763 917 которым было еще 116 транзакции еще интересного такого как бы показать вы все равно здесь еще накликаетесь сюда включили меня на позицию 49 в блоке у моего аккаунта нонс 9 то есть я уже там 89 транзакции с него отправил Вот и вместе транзакции был отправлен 001 эфира Вот они были переданы на мой другой [музыка] это проводник блоков которые по сути как бы показывает всю информацию в нем довольно часто приходится сидеть
(2:46:05) особенно если там разбираюсь там не знаю платежами взаимодействием с контрактами и так далее вот вторая история вот этот кошелек И когда я вам говорил в тот раз типа Почему почему это так скажем поудобнее как бы банковских приложений но я вот с этой вот штукой могу ходить сотню разных финансовых проектов то есть не знаю там поменять там не знаю эфирное на доллары доллары там еще какими там токены положить их там не знаю под залог или там положить там типа в банк Так что другие как бы люди будут брать в долг там за проценты и так далее то здесь
(2:46:46) очень много всего и все это делается при помощи вот этого расширения без регистрации вообще без всего это крайне удобно это Прям вообще быстро и честно говоря там не знаю Тиньков лень очень сложно коды короче что-то еще там непонятное вообще Извините какой смысл майнером майнить блоки в тестовой сети а это разработчики поднимают потому что я могу Да да это для работы собственно для обучения для работы очень удобно контракты выкладывать сначала в тестовую сеть в тестовой сети как бы на тестовом эфире все отработать можно поднять
(2:47:32) короче прям целый прям Весь сайт полноценный короче со всем Вообще функционалом полностью просто будет как бы в тестовой сети а в боевую сеть потом просто скопировать контракты и все его все как бы работает расскажу можно доверять этому расширению Ну как бы Много народу как бы доверять Если не доверяете как бы можно там двумя строчками на питоне как бы пожалуйста сами себе сгенерируйте как бы адреса в этой будете делать Вот сами себе сделать адреса Подпишите транзакцию до отправьте хотите питоном хотите джеской как бы
(2:48:11) хотите там Java это чем угодно то есть здесь как бы все просто Он просто как бы облегчает Вам работу А так вы можете сделать из консоли все если вообще Паранойя как бы то можно и аппаратный кошелек сделать вот ну в общем грубо говоря с тем как переводить там не знаю там эфир как бы поиск кошельками этого без меня как-нибудь изучаете потому что здесь материалов на самом деле реально дофига вот так что еще наверное там интересная наверное Важный человек бы заранее до сказать что у контракта у него есть собственный адрес
(2:48:58) и Ну то есть когда я говорю мы отправляем транзакцию в контракт на самом деле Вот в этой нашей стоит где у нас был там Вася было 10 эфира у него был нонс 9 то после того как Вася выполнил Василий кто-то другой выполнить специальную транзакцию клеит контракт создать контракт здесь же появился контракт адрес его контракта у которого тоже есть баланс эфира то есть Может быть нулевой как бы на него Но грубо говоря контракт тоже может иметь как бы эфир на своем балансе у него тоже есть нонс потому что контракт может создавать
(2:49:42) другие контракты это будет увеличивать нос но еще у него есть соответственно здесь поле который называется код и вот здесь как раз находится бинарном виде как бы все вот по сути байт-код вот этого контракта вместе с функциями сам контракт очень похож на c++ый объект на оси плюсные классы там используется объект ориентированные программирование там наследование как бы плюсом довольно таки близко даже плюсом еще у этого контракта что важно у него тоже есть свой собственный сторож хранилище в которой он ходит как бы
(2:50:27) может записывать и все это конечно тоже попадает в тот самый как бы в State Root То есть это тоже считается данными блокчейна которые тоже обновляется исполняются все делается в консенсусе то есть целиком то есть Несмотря на то что здесь какой-то под какой-то там хранилище вроде уже как бы вещи такие которые на разных серверах как бы разные здесь это не так здесь это прям такая единая очень строгая такая монолитная как бы штука вот которая обновляется в конце вот контракта можно менять Нет контракта менять нельзя вот контракты менять
(2:51:08) нельзя как бы есть паттерны мы будем их использовать которые позволяют как бы менять там ну делать другую версию контракта там тепло и соответственно переключаться на неё и как бы технически получается что мы меняем как бы сам от контракта для пользователей страны Но так-то нет Однажды за диплоидный контракт все он как бы гвоздями именно собственно Почему как бы такой бунт и как бы ISO то был вот этого краудфандинга как бы на эфире там всех все видят и все видят что у тебя там в краудфандинге нету функции забрать все деньги как бы
(2:51:45) избежать вот ну то есть потому что ее нету как бы контракт публичный то есть также поэтому как бы defi называют себя там в этом не бант Короче мы протокол протокол потому что это просто мы код Разместили как бы можете убедиться здесь нет Нигде функции которые вот мне как бы заберет ваши деньги то есть функция которая там под один процент как кладет по другой процент отдает как бы это протокол то так как бы работает как бы там нет я туда ничего не могу добавить ничего не могу изменить здесь еще как бы наверное хороший базу
(2:52:25) для база города для блокчейна это паблик ли Вере файл то есть она как бы до проверяем и публично То есть вы как бы публично можете проверить этот код Ну собственно один из профилей как бы компании Ну собственно наши как раз аудиты то что мы до убеждаемся что этот код реально делает то что то что описано в документации Но помимо как бы до поиска там багов именно безопасности хорошо да как бы то есть убеждаемся что Да вот здесь нету там функции закладок там например каких-нибудь которые позволяют вытащить там все только и так далее
(2:53:08) вот так но на самом деле уже даже не хочется до забегать вперед Вот потому что там следующий тоже будет Мы прям посмотрим с вами контракты тоже так быстренько там вверх на верхний уровень потыкаемся в разные проекты и про Газ соответственно и про сложность про все это обязательно как бы поговорим и соответственно и после этого начнем уже потихонечку Сами как бы на солидете писать там не знаю выбирать курсовой проект Вот делать как бы задание а дальше уже когда уже хорошо прям погрузимся солидете во все там паттерны
(2:53:48) как бы по всю эту историю как бы мы еще копнём как бы с вами в криптографию пилинговые сети консенсы и так далее То есть это то что можно изучать на самом деле по ходу вот так давайте еще вопросы и наверное на сегодня все еще сегодня наверное сегодня но я считаю Может отформатирован я сегодня публикую все домашки вот скину ссылка на все домашки как бы чтобы могли выбрать чего вы хотите как бы делать из этого там первым вторым третьем что понравится вот могли получше свой семестр распланировать как и было написано там в программе
(2:54:31) треть Ну то есть там 30 баллов из 100 это курсовой проект вот если хотите как бы можете там не знаю опять же там на хаттон Если у вас есть как бы там два компонента курсового проекта вы хотите там не знаю там фронт написать Может быть там бэк короче и контракты то можете объединиться в команды Например по два человека вот будет печать соответственно вдвоем сдачи курсового проекта она похожа как бы на не знаю презентацию для инвестора технологического пытаетесь продать Как бы мне как бы соответственно свой проект при этом я
(2:55:14) еще буду смотреть соответственно Как там это за кожано Вот и ребят наш тоже как бы аудитора Вот так все по домам сказал В общем сегодня ссылку скину вот изменения там будут скорее всего только косметический за домашку 70 баллов соответственно вот у меня есть вопрос по виза Как мы можем узнать что двум третьем можно доверять это какие-то доверенные ноты должны мне это нет это чисто такое как бы формальное предположение то есть мы просто говорим этот эта сеть не будет никогда как бы остановлено и в ней не появится короче
(2:55:58) [музыка] небезопасных блоков при условии при строгом слове что больше 2 3 Следует протоколу мы сказать не можем То есть это просто по сути это такой как бы как ты пишешь статья как бы что не знаю это машина будет ехать при условии если не знаю градус наклона не больше там 60 градусов здесь есть конкретное число Типа если вот это число выполняется то такие свойства они как бы со стопроцентной вероятностью протокола исполняются если больше двух третьей честных современных proof of stake Никто не сможет Ну если вот прям
(2:56:47) если прям не знаю там 67 из 99 как бы полностью прям скачали как бы код и полностью следует протокола вы такой блокчейн не сможете Никаким образом не остановить то есть не сделать так чтобы блоки не финализировались и не сможете ни одного протолкнуть блока как бы который не следовало бы протокола который как бы как-то по-другому Вот а если там их там больше если вы захватили там большую часть сетей как бы это там то как бы да как вы можете и такие захваты кстати были вот уже тоже поговорим интересные истории Ну то есть
(2:57:30) в теории ничего не мешает поднять много вредных нот ничего не мешает как бы ну деньги пожалуйста Да как бы если у вас есть там много миллиардов долларов конечно ты делаешь там где у вас был там захвачен там например там тут вообще на самом деле происходит куча таких вообще штук блокчейна За что мы как бы у которых все аналогов в общем-то нету в таком как бы централизованном мире и разработка чуть-чуть другая как бы история там совсем другие и Безопасность другая как бы вот оно все базируется на тех же принципах там
(2:58:13) техника практически там тоже как бы но много всего интересного захваты сетей Там тоже были если у нас небольшая сеть Как мы можем обеспечить безентинфолтурина как-то заставить как бы больше двух 3 как бы быть честными Вот то есть никак Если они сговорятся как бы если у вас там три валидатора как бы там 5 короче там Четверо из них сговорятся как бы сорян то есть они могут что хотят делать хорошо вот смешно было в заметках типа что лучший блокчейн это блокчейны в которых валидаторы ненавидят друг друга искренне вот как бы там не знаю Там прям вот дела
(2:59:06) прям идеальный блокчейн это не знаю CB Китай CBR России США и еще там куча всяких разных Да они как бы не смогут без одобрения других ничего делать при этом он сам нужен работа для проведения там не знаю международных платежей не доверяют они себя перепроверяют все блоки все транзакции очень интересно Но вообще вы Поэтому в этом курсе узнаете что не эфир не биткоин на самом-то деле как бы не особо не особо-то они децентрализованы надо сказать как бы пруф of стейки тоже как бы там здесь там киты с большим количеством денег там как бы майнинговые
(3:00:05) пулы которые тоже огромную мощь как бы обладают и Bitcoin майнится там десятка майнинговых полов всего десяткам никаких там миллионов майнеров нету никто Пока не сделал такого вот так что так Так ладно все 151 все заканчиваем тогда
